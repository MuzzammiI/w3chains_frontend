[
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\ButtonCard.jsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\CategoriesSection.jsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\CryptoTicker.jsx",
        "messages": [
            {
                "ruleId": "no-unused-vars",
                "severity": 2,
                "message": "'React' is defined but never used.",
                "line": 1,
                "column": 8,
                "nodeType": "Identifier",
                "messageId": "unusedVar",
                "endLine": 1,
                "endColumn": 13,
                "suggestions": [
                    {
                        "messageId": "removeVar",
                        "data": {
                            "varName": "React"
                        },
                        "fix": {
                            "range": [
                                7,
                                13
                            ],
                            "text": ""
                        },
                        "desc": "Remove unused variable 'React'."
                    }
                ]
            }
        ],
        "suppressedMessages": [],
        "errorCount": 1,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import React, { useState, useEffect } from 'react';\r\n\r\n// CryptoTicker component\r\nconst CryptoTicker = () => {\r\n  // State to hold the cryptocurrency data fetched from the API\r\n  const [coins, setCoins] = useState([\r\n    // Placeholder data to prevent blank state on initial load\r\n    // These will be replaced by actual data once fetched\r\n    { id: \"btc\", symbol: \"BTC\", current_price: 68000.00, price_change_percentage_24h: 1.5, image: \"https://assets.coingecko.com/coins/images/1/large/bitcoin.png?1696501400\" },\r\n    { id: \"eth\", symbol: \"ETH\", current_price: 3500.00, price_change_percentage_24h: -0.8, image: \"https://assets.coingecko.com/coins/images/279/large/ethereum.png?1696501628\" },\r\n    { id: \"bnb\", symbol: \"BNB\", current_price: 600.00, price_change_percentage_24h: 0.5, image: \"https://assets.coingecko.com/coins/images/825/large/bnb-icon2_2x.png?1696501970\" }\r\n  ]);\r\n\r\n  // useEffect hook to fetch cryptocurrency data when the component mounts\r\n  // and set up an interval for periodic updates\r\n  useEffect(() => {\r\n    const fetchCoins = async () => {\r\n      try {\r\n        // Fetch data from CoinGecko API\r\n        const response = await fetch(\r\n          \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=20&page=1&sparkline=false\"\r\n        );\r\n        const data = await response.json();\r\n        // Update the state with the fetched data\r\n        setCoins(data);\r\n      } catch (error) {\r\n        // Log any errors during the fetch operation\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchCoins(); // Initial data fetch when the component mounts\r\n\r\n    // Set up an interval to fetch data every 30 seconds (30000 milliseconds)\r\n    const interval = setInterval(fetchCoins, 30000);\r\n\r\n    // Cleanup function: clear the interval when the component unmounts\r\n    return () => clearInterval(interval);\r\n  }, []); // Empty dependency array ensures this effect runs only once on mount\r\n\r\n  // Duplicate coins multiple times to create a very long, seamless loop for the animation\r\n  // This helps prevent visible jumps when the animation resets, especially on wider screens.\r\n  const duplicatedCoins = Array(5).fill(coins).flat(); // Duplicate 5 times for smooth continuous scroll\r\n\r\n  return (\r\n    <div className=\"w-full mt-18 text-white overflow-hidden py-2 \">\r\n      {/* Custom CSS for the glow effect, sliding animation, and pause on hover */}\r\n      <style>\r\n        {`\r\n          @keyframes slide {\r\n            0% { transform: translateX(0%); }\r\n            100% { transform: translateX(-50%); } /* Moves half the content width to loop seamlessly */\r\n          }\r\n          .animate-slide {\r\n            animation: slide 120s linear infinite; /* Increased duration for much slower slide */\r\n          }\r\n          /* Pause animation on hover */\r\n          .ticker-container:hover .animate-slide {\r\n            animation-play-state: paused;\r\n          }\r\n        `}\r\n      </style>\r\n\r\n      {/* Container for the sliding animation */}\r\n      {/* Added 'ticker-container' class for hover effect */}\r\n      <div className=\"relative h-8 ticker-container\">\r\n        <div className=\"absolute top-0 left-0 flex h-full animate-slide\">\r\n          {/* Map over the duplicated coins to render each crypto item */}\r\n          {duplicatedCoins.map((coin, index) => (\r\n            <div\r\n              key={`${coin.id}-${index}`} // Unique key using id and index for duplication\r\n              className=\"flex items-center justify-center p-3 mx-2 bg-gray-700 bg-opacity-30 rounded-lg shadow-md border border-gray-600 flex-shrink-0\"\r\n              style={{ minWidth: '180px' }} // Slightly reduced min-width for compactness\r\n            >\r\n              {/* Crypto Image */}\r\n              {coin.image && (\r\n                <img\r\n                  src={coin.image}\r\n                  alt={coin.name}\r\n                  className=\"w-4 h-4 mr-2 rounded-full\" // Added rounded-full for circular images\r\n                  onError={(e) => { e.target.onerror = null; e.target.src = 'https://placehold.co/24x24/4A5568/FFFFFF?text=?' }} // Fallback for broken images\r\n                />\r\n              )}\r\n\r\n              {/* Crypto Symbol */}\r\n              <span className=\"text-sm font-extrabold mr-2 text-purple-600\"> {/* Reduced font size */}\r\n                {coin.symbol.toUpperCase()}\r\n              </span>\r\n\r\n              {/* Crypto Price */}\r\n              <span className=\"text-xs font-bold font-mono mr-3 text-gray-100\"> {/* Reduced font size, added font-mono */}\r\n                ${coin.current_price ? coin.current_price.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }) : 'N/A'}\r\n              </span>\r\n\r\n              {/* Profit/Loss Indicator */}\r\n              <span\r\n                className={`text-xs font-bold flex items-center px-1.5 py-0.5 rounded-full ${ /* Reduced font size */\r\n                  coin.price_change_percentage_24h >= 0 ? 'bg-green-600 text-white' : 'bg-red-600 text-white'\r\n                }`}\r\n              >\r\n                {coin.price_change_percentage_24h >= 0 ? (\r\n                  <svg className=\"w-4 h-4 mr-0.5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                    <path fillRule=\"evenodd\" d=\"M14.707 10.293a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 111.414-1.414L9 12.586V5a1 1 0 012 0v7.586l2.293-2.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                ) : (\r\n                  <svg className=\"w-4 h-4 mr-0.5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                    <path fillRule=\"evenodd\" d=\"M5.293 9.707a1 1 0 010-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 01-1.414 1.414L11 7.414V15a1 1 0 11-2 0V7.414L6.707 9.707a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                )}\r\n                {coin.price_change_percentage_24h ? `${Math.abs(coin.price_change_percentage_24h).toFixed(2)}%` : 'N/A'}\r\n              </span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoTicker;\r\n",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\DelayedLink.jsx",
        "messages": [
            {
                "ruleId": "no-unused-vars",
                "severity": 2,
                "message": "'React' is defined but never used.",
                "line": 1,
                "column": 8,
                "nodeType": "Identifier",
                "messageId": "unusedVar",
                "endLine": 1,
                "endColumn": 13,
                "suggestions": [
                    {
                        "messageId": "removeVar",
                        "data": {
                            "varName": "React"
                        },
                        "fix": {
                            "range": [
                                7,
                                13
                            ],
                            "text": ""
                        },
                        "desc": "Remove unused variable 'React'."
                    }
                ]
            },
            {
                "ruleId": "no-unused-vars",
                "severity": 2,
                "message": "'useEffect' is defined but never used.",
                "line": 1,
                "column": 27,
                "nodeType": "Identifier",
                "messageId": "unusedVar",
                "endLine": 1,
                "endColumn": 36,
                "suggestions": [
                    {
                        "messageId": "removeVar",
                        "data": {
                            "varName": "useEffect"
                        },
                        "fix": {
                            "range": [
                                24,
                                35
                            ],
                            "text": ""
                        },
                        "desc": "Remove unused variable 'useEffect'."
                    }
                ]
            }
        ],
        "suppressedMessages": [],
        "errorCount": 2,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport LoadingBlurOverlay from './LoadingBlurOverlay'; // Your blur overlay\r\n\r\nconst DelayedLink = ({ to, children, delay = 500, ...props }) => {\r\n  const [isNavigating, setIsNavigating] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleClick = useCallback(async (event) => {\r\n    // Prevent default navigation immediately\r\n    event.preventDefault();\r\n    setIsNavigating(true);\r\n\r\n    // Simulate component loading delay (can be replaced with actual dynamic import logic)\r\n    // For a real lazy-loaded component, you'd need to somehow ensure it's loaded here\r\n    // before navigating. This is the tricky part with this workaround.\r\n    // In a true lazy-loading scenario, React.lazy handles the import.\r\n    // Here, we're just simulating a delay.\r\n    await new Promise(resolve => setTimeout(resolve, delay));\r\n\r\n    // After the delay (simulating component load), then navigate\r\n    navigate(to);\r\n    setIsNavigating(false);\r\n  }, [to, delay, navigate]);\r\n\r\n  return (\r\n    <>\r\n      <Link to={to} onClick={handleClick} {...props}>\r\n        {children}\r\n      </Link>\r\n      {isNavigating && <LoadingBlurOverlay />}\r\n    </>\r\n  );\r\n};\r\n\r\nDelayedLink.propTypes = {\r\n  to: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  delay: PropTypes.number, // Optional delay in ms\r\n};\r\n\r\nexport default DelayedLink;\r\n",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\FAQ.jsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\Footer.jsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\Homepage\\ProjectDiscovery.jsx",
        "messages": [
            {
                "ruleId": "no-unused-vars",
                "severity": 2,
                "message": "'React' is defined but never used.",
                "line": 1,
                "column": 8,
                "nodeType": "Identifier",
                "messageId": "unusedVar",
                "endLine": 1,
                "endColumn": 13,
                "suggestions": [
                    {
                        "messageId": "removeVar",
                        "data": {
                            "varName": "React"
                        },
                        "fix": {
                            "range": [
                                7,
                                13
                            ],
                            "text": ""
                        },
                        "desc": "Remove unused variable 'React'."
                    }
                ]
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'title' is missing in props validation",
                "line": 4,
                "column": 24,
                "nodeType": "Property",
                "messageId": "missingPropType",
                "endLine": 4,
                "endColumn": 29
            },
            {
                "ruleId": "no-unused-vars",
                "severity": 2,
                "message": "'description' is defined but never used.",
                "line": 4,
                "column": 31,
                "nodeType": "Identifier",
                "messageId": "unusedVar",
                "endLine": 4,
                "endColumn": 42,
                "suggestions": [
                    {
                        "messageId": "removeVar",
                        "data": {
                            "varName": "description"
                        },
                        "fix": {
                            "range": [
                                137,
                                150
                            ],
                            "text": ""
                        },
                        "desc": "Remove unused variable 'description'."
                    }
                ]
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'description' is missing in props validation",
                "line": 4,
                "column": 31,
                "nodeType": "Property",
                "messageId": "missingPropType",
                "endLine": 4,
                "endColumn": 42
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'items' is missing in props validation",
                "line": 4,
                "column": 44,
                "nodeType": "Property",
                "messageId": "missingPropType",
                "endLine": 4,
                "endColumn": 49
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'colorClass' is missing in props validation",
                "line": 4,
                "column": 51,
                "nodeType": "Property",
                "messageId": "missingPropType",
                "endLine": 4,
                "endColumn": 61
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'items.length' is missing in props validation",
                "line": 10,
                "column": 62,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 10,
                "endColumn": 68
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'items.length' is missing in props validation",
                "line": 13,
                "column": 13,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 13,
                "endColumn": 19
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'items.map' is missing in props validation",
                "line": 29,
                "column": 18,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 29,
                "endColumn": 21
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'items.map' is missing in props validation",
                "line": 50,
                "column": 16,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 50,
                "endColumn": 19
            }
        ],
        "suppressedMessages": [],
        "errorCount": 10,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import React, { useState, useEffect } from 'react';\r\n\r\n// Card component for displaying project information\r\nconst ProjectCard = ({ title, description, items, colorClass }) => {\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n\r\n  // Auto-slide effect for cards\r\n  useEffect(() => {\r\n    const slideInterval = setInterval(() => {\r\n      setCurrentSlide((prevSlide) => (prevSlide + 1) % items.length);\r\n    }, 3000); // Change slide every 2 seconds\r\n    return () => clearInterval(slideInterval);\r\n  }, [items.length]); // Re-run effect if items change\r\n\r\n  return (\r\n    <div className={`relative bg-gray-800 rounded-xl shadow-lg p-6 flex flex-col justify-between h-auto  overflow-hidden ${colorClass}`}>\r\n      {/* Card Header */}\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <h3 className=\"text-md font-semibold text-white\">{title}</h3>\r\n        <a href=\"#\" className=\"text-blue-400 hover:text-blue-300 transition-colors duration-200 text-sm\">More &gt;</a>\r\n      </div>\r\n\r\n      {/* Sliding Content Area */}\r\n      <div className=\"flex-grow overflow-hidden relative\">\r\n        <div\r\n          className=\"flex transition-transform duration-500 ease-in-out\"\r\n          style={{ transform: `translateX(-${currentSlide * 100}%)` }}\r\n        >\r\n          {items.map((item, index) => (\r\n            <div key={index} className=\"w-full flex-shrink-0 p-2\">\r\n              <div className=\"flex items-center mb-3\">\r\n                {/* Placeholder for project icon/image */}\r\n                <div className=\"w-8 h-8 bg-gray-700 rounded-full flex items-center justify-center mr-3 text-white\">\r\n                  {item.icon || '🚀'} {/* Use provided icon or a default emoji */}\r\n                </div>\r\n                <div className=\"flex-grow\">\r\n                  <p className=\"text-white font-medium text-sm\">{item.name}</p>\r\n                  {item.value && <p className=\"text-gray-300 text-sm\">{item.value}</p>}\r\n                </div>\r\n                {item.date && <p className=\"text-gray-400 text-sm\">{item.date}</p>}\r\n              </div>\r\n              {item.description && <p className=\"text-gray-400 text-sm\">{item.description}</p>}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Sliding Point Icons (Pagination) */}\r\n      <div className=\"absolute bottom-4 left-0 right-0 flex justify-center space-x-2\">\r\n        {items.map((_, index) => (\r\n          <span\r\n            key={index}\r\n            className={`block w-2.5 h-2.5 rounded-full ${\r\n              index === currentSlide ? 'bg-blue-500' : 'bg-gray-500'\r\n            } transition-colors duration-200 cursor-pointer`}\r\n            onClick={() => setCurrentSlide(index)}\r\n          ></span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// ProjectDiscovery Component (the main component requested)\r\nconst ProjectDiscovery = () => {\r\n  // Random data for the cards\r\n  const recentFundraisingData = [\r\n    { icon: '💰', name: 'PublicAI', value: '$8M', date: 'Jun 17' },\r\n    { icon: '💰', name: 'EigenCloud', value: '$70M', date: 'Jun 17' },\r\n    { icon: '💰', name: 'Ubyx', value: '$10M', date: 'Jun 17' },\r\n    { icon: '💰', name: 'ZetaChain', value: '$27M', date: 'Jun 16' },\r\n    { icon: '💰', name: 'LayerZero', value: '$120M', date: 'Jun 15' },\r\n  ];\r\n\r\n  const newTestNetLaunchesData = [\r\n    { icon: '🧪', name: 'Own Protocol', date: 'May 25' },\r\n    { icon: '🧪', name: 'Energy Labs', date: 'May 09' },\r\n    { icon: '🧪', name: 'Pharos', date: 'May 06' },\r\n    { icon: '🧪', name: 'Blast', date: 'May 01' },\r\n    { icon: '🧪', name: 'Manta Network', date: 'Apr 28' },\r\n  ];\r\n\r\n  const latestUpdatesOnXData = [\r\n    { icon: '🐦', name: 'Anatoly Yakovenko', description: 'Followed Block Stranding', date: 'Jun 17' },\r\n    { icon: '🐦', name: 'Hasu', description: 'Followed ink:', date: 'Jun 17' },\r\n    { icon: '🐦', name: 'Nic Carter', description: 'Followed XFX', date: 'Jun 17' },\r\n    { icon: '🐦', name: 'Vitalik Buterin', description: 'Commented on EIP-4844', date: 'Jun 16' },\r\n    { icon: '🐦', name: 'Polygon Labs', description: 'Announced ZK-EVM upgrade', date: 'Jun 15' },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"bg-zinc-900 font-mono rounded-2xl max-w-7xl mx-auto flex flex-col items-center p-4 font-inter\">\r\n      {/* Header Section */}\r\n      <div className=\"w-full max-w-6xl mb-8\">\r\n        <h1 className=\"text-xl md:text-2xl font-bold text-white mb-2\">Top 10 Hot Crypto Projects</h1>\r\n        <p className=\"text-gray-300 text-md\">Real-time display of top 100 Crypto projects by Hot Index <span className=\"text-gray-500 text-sm\">&#9432;</span></p>\r\n      </div>\r\n\r\n      {/* Project Cards Grid */}\r\n      <div className=\"w-full max-w-6xl grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n        <ProjectCard\r\n          title=\"Recent Fundraising\"\r\n          items={recentFundraisingData}\r\n          colorClass=\"hover:border-blue-500 border border-transparent transition-all duration-300\"\r\n        />\r\n        <ProjectCard\r\n          title=\"New TestNet Launches\"\r\n          items={newTestNetLaunchesData}\r\n          colorClass=\"hover:border-green-500 border border-transparent transition-all duration-300\"\r\n        />\r\n        <ProjectCard\r\n          title=\"Latest Updates on X\"\r\n          items={latestUpdatesOnXData}\r\n          colorClass=\"hover:border-purple-500 border border-transparent transition-all duration-300\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default ProjectDiscovery;",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\Homepage\\headlinesHomePage\\components\\ArticleDetailPage.jsx",
        "messages": [
            {
                "ruleId": "no-unused-vars",
                "severity": 2,
                "message": "'React' is defined but never used.",
                "line": 1,
                "column": 8,
                "nodeType": "Identifier",
                "messageId": "unusedVar",
                "endLine": 1,
                "endColumn": 13,
                "suggestions": [
                    {
                        "messageId": "removeVar",
                        "data": {
                            "varName": "React"
                        },
                        "fix": {
                            "range": [
                                7,
                                13
                            ],
                            "text": ""
                        },
                        "desc": "Remove unused variable 'React'."
                    }
                ]
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article' is missing in props validation",
                "line": 3,
                "column": 30,
                "nodeType": "Property",
                "messageId": "missingPropType",
                "endLine": 3,
                "endColumn": 37
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'onClose' is missing in props validation",
                "line": 3,
                "column": 39,
                "nodeType": "Property",
                "messageId": "missingPropType",
                "endLine": 3,
                "endColumn": 46
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.image' is missing in props validation",
                "line": 19,
                "column": 26,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 19,
                "endColumn": 31
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.title' is missing in props validation",
                "line": 20,
                "column": 26,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 20,
                "endColumn": 31
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.title' is missing in props validation",
                "line": 34,
                "column": 105,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 34,
                "endColumn": 110
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.author' is missing in props validation",
                "line": 36,
                "column": 22,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 36,
                "endColumn": 28
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.author' is missing in props validation",
                "line": 36,
                "column": 82,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 36,
                "endColumn": 88
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.date' is missing in props validation",
                "line": 37,
                "column": 28,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 37,
                "endColumn": 32
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.time' is missing in props validation",
                "line": 38,
                "column": 28,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 38,
                "endColumn": 32
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.fullContent' is missing in props validation",
                "line": 41,
                "column": 22,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 41,
                "endColumn": 33
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.description' is missing in props validation",
                "line": 41,
                "column": 45,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 41,
                "endColumn": 56
            }
        ],
        "suppressedMessages": [],
        "errorCount": 12,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import React, { useState, useEffect } from 'react';\r\n\r\nconst ArticleDetailPage = ({ article, onClose }) => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  useEffect(() => {\r\n    setIsVisible(true);\r\n    return () => setIsVisible(false);\r\n  }, [article]);\r\n\r\n  if (!article) return null;\r\n\r\n  return (\r\n    <div\r\n      className={`fixed inset-0 bg-gray-900 bg-opacity-90 flex items-center justify-center p-4 z-50 transition-opacity duration-500 ${isVisible ? 'opacity-100' : 'opacity-0'}`}\r\n    >\r\n      <div className=\"bg-white rounded-xl shadow-2xl max-w-7xl w-full max-h-[90vh] overflow-y-auto transform transition-all duration-500 ${isVisible ? 'scale-100' : 'scale-95'}\">\r\n        <div className=\"relative\">\r\n          <img\r\n            src={article.image || 'https://placehold.co/1200x600/CCCCCC/000000?text=No+Image'}\r\n            alt={article.title}\r\n            className=\"w-full h-64 md:h-96 object-cover rounded-t-xl\"\r\n          />\r\n          <button\r\n            onClick={onClose}\r\n            className=\"absolute cursor-pointer top-4 right-4 bg-gray-800 text-white rounded-full p-2 shadow-lg hover:bg-gray-700 transition-colors duration-300\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        <div className=\"p-6 md:p-8\">\r\n          <h1 className=\"text-3xl md:text-4xl font-extrabold text-gray-900 mb-4 leading-tight\">{article.title}</h1>\r\n          <div className=\"flex flex-wrap items-center text-sm text-gray-600 mb-6 space-x-4\">\r\n            {article.author && <span>By <span className=\"font-semibold\">{article.author}</span></span>}\r\n            <span>{article.date}</span>\r\n            <span>{article.time}</span>\r\n          </div>\r\n          <p className=\"text-base md:text-lg text-gray-800 leading-relaxed whitespace-pre-wrap\">\r\n            {article.fullContent || article.description || 'No full content available for this article.'}\r\n          </p>\r\n          <div className=\"mt-8 flex justify-end\">\r\n            <button\r\n              onClick={onClose}\r\n              className=\"bg-blue-600 cursor-pointer text-white px-6 py-3 rounded-lg shadow-md hover:bg-blue-700 transition-colors duration-300 text-lg font-medium\"\r\n            >\r\n              Back to Headlines\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArticleDetailPage;",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\Homepage\\headlinesHomePage\\components\\ChildHeadlineCard.jsx",
        "messages": [
            {
                "ruleId": "no-unused-vars",
                "severity": 2,
                "message": "'React' is defined but never used.",
                "line": 1,
                "column": 8,
                "nodeType": "Identifier",
                "messageId": "unusedVar",
                "endLine": 1,
                "endColumn": 13,
                "suggestions": [
                    {
                        "messageId": "removeVar",
                        "data": {
                            "varName": "React"
                        },
                        "fix": {
                            "range": [
                                7,
                                18
                            ],
                            "text": ""
                        },
                        "desc": "Remove unused variable 'React'."
                    }
                ]
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article' is missing in props validation",
                "line": 3,
                "column": 30,
                "nodeType": "Property",
                "messageId": "missingPropType",
                "endLine": 3,
                "endColumn": 37
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'onClick' is missing in props validation",
                "line": 3,
                "column": 39,
                "nodeType": "Property",
                "messageId": "missingPropType",
                "endLine": 3,
                "endColumn": 46
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.image' is missing in props validation",
                "line": 10,
                "column": 22,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 10,
                "endColumn": 27
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.title' is missing in props validation",
                "line": 11,
                "column": 22,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 11,
                "endColumn": 27
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.title' is missing in props validation",
                "line": 15,
                "column": 152,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 15,
                "endColumn": 157
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.description' is missing in props validation",
                "line": 16,
                "column": 69,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 16,
                "endColumn": 80
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.date' is missing in props validation",
                "line": 18,
                "column": 26,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 18,
                "endColumn": 30
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.time' is missing in props validation",
                "line": 18,
                "column": 43,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 18,
                "endColumn": 47
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.author' is missing in props validation",
                "line": 19,
                "column": 29,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 19,
                "endColumn": 35
            }
        ],
        "suppressedMessages": [],
        "errorCount": 10,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import React from 'react';\r\n\r\nconst ChildHeadlineCard = ({ article, onClick }) => {\r\n  return (\r\n    <div\r\n      className=\"w-full bg-green-500 rounded-2xl shadow-lg overflow-hidden cursor-pointer transform transition-all duration-300 ease-in-out hover:scale-105\"\r\n      onClick={() => onClick(article)}\r\n    >\r\n      <img\r\n        src={article.image}\r\n        alt={article.title}\r\n        className=\"w-full h-40 object-cover rounded-t-2xl\"\r\n      />\r\n      <div className=\"p-4 bg-white text-gray-800\">\r\n        <h4 className=\"text-lg font-semibold mb-1 cursor-pointer hover:underline\" onClick={(e) => { e.stopPropagation(); onClick(article); }}>{article.title}</h4>\r\n        <p className=\"text-sm text-gray-600 mb-2 truncate\">{article.description}</p>\r\n        <div className=\"text-xs text-gray-500 flex items-center justify-between\">\r\n          <span>{article.date} • {article.time}</span>\r\n          <span>By {article.author}</span>\r\n          <button className=\"text-gray-500 cursor-pointer hover:text-blue-600 ml-2\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 0a3 3 0 110 2.684 3 3 0 010-2.684zm0 0a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChildHeadlineCard;",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\Homepage\\headlinesHomePage\\components\\DotIndicators.jsx",
        "messages": [
            {
                "ruleId": "no-unused-vars",
                "severity": 2,
                "message": "'React' is defined but never used.",
                "line": 1,
                "column": 8,
                "nodeType": "Identifier",
                "messageId": "unusedVar",
                "endLine": 1,
                "endColumn": 13,
                "suggestions": [
                    {
                        "messageId": "removeVar",
                        "data": {
                            "varName": "React"
                        },
                        "fix": {
                            "range": [
                                7,
                                18
                            ],
                            "text": ""
                        },
                        "desc": "Remove unused variable 'React'."
                    }
                ]
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'count' is missing in props validation",
                "line": 3,
                "column": 26,
                "nodeType": "Property",
                "messageId": "missingPropType",
                "endLine": 3,
                "endColumn": 31
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'activeIndex' is missing in props validation",
                "line": 3,
                "column": 33,
                "nodeType": "Property",
                "messageId": "missingPropType",
                "endLine": 3,
                "endColumn": 44
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'onDotClick' is missing in props validation",
                "line": 3,
                "column": 46,
                "nodeType": "Property",
                "messageId": "missingPropType",
                "endLine": 3,
                "endColumn": 56
            }
        ],
        "suppressedMessages": [],
        "errorCount": 4,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import React from 'react';\r\n\r\nconst DotIndicators = ({ count, activeIndex, onDotClick }) => {\r\n  return (\r\n    <div className=\"flex justify-center items-center space-x-2 absolute bottom-4 w-full z-30\">\r\n      {Array.from({ length: count }).map((_, index) => (\r\n        <span\r\n          key={index}\r\n          className={`\r\n            block rounded-full cursor-pointer transition-all duration-300 ease-in-out\r\n            ${index === activeIndex ? 'w-6 h-2 bg-white' : 'w-2 h-2 bg-gray-400'}\r\n          `}\r\n          onClick={() => onDotClick(index)}\r\n        ></span>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DotIndicators;",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\Homepage\\headlinesHomePage\\components\\MainHeadlineCard.jsx",
        "messages": [
            {
                "ruleId": "no-unused-vars",
                "severity": 2,
                "message": "'React' is defined but never used.",
                "line": 1,
                "column": 8,
                "nodeType": "Identifier",
                "messageId": "unusedVar",
                "endLine": 1,
                "endColumn": 13,
                "suggestions": [
                    {
                        "messageId": "removeVar",
                        "data": {
                            "varName": "React"
                        },
                        "fix": {
                            "range": [
                                7,
                                18
                            ],
                            "text": ""
                        },
                        "desc": "Remove unused variable 'React'."
                    }
                ]
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article' is missing in props validation",
                "line": 4,
                "column": 29,
                "nodeType": "Property",
                "messageId": "missingPropType",
                "endLine": 4,
                "endColumn": 36
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'onClick' is missing in props validation",
                "line": 4,
                "column": 38,
                "nodeType": "Property",
                "messageId": "missingPropType",
                "endLine": 4,
                "endColumn": 45
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'onPrev' is missing in props validation",
                "line": 4,
                "column": 47,
                "nodeType": "Property",
                "messageId": "missingPropType",
                "endLine": 4,
                "endColumn": 53
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'onNext' is missing in props validation",
                "line": 4,
                "column": 55,
                "nodeType": "Property",
                "messageId": "missingPropType",
                "endLine": 4,
                "endColumn": 61
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'totalHeadlines' is missing in props validation",
                "line": 4,
                "column": 63,
                "nodeType": "Property",
                "messageId": "missingPropType",
                "endLine": 4,
                "endColumn": 77
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'currentHeadlineIndex' is missing in props validation",
                "line": 4,
                "column": 79,
                "nodeType": "Property",
                "messageId": "missingPropType",
                "endLine": 4,
                "endColumn": 99
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'onDotClick' is missing in props validation",
                "line": 4,
                "column": 101,
                "nodeType": "Property",
                "messageId": "missingPropType",
                "endLine": 4,
                "endColumn": 111
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.image' is missing in props validation",
                "line": 9,
                "column": 22,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 9,
                "endColumn": 27
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.title' is missing in props validation",
                "line": 10,
                "column": 22,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 10,
                "endColumn": 27
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.title' is missing in props validation",
                "line": 18,
                "column": 20,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 18,
                "endColumn": 25
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.description' is missing in props validation",
                "line": 20,
                "column": 70,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 20,
                "endColumn": 81
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.date' is missing in props validation",
                "line": 22,
                "column": 26,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 22,
                "endColumn": 30
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.time' is missing in props validation",
                "line": 24,
                "column": 26,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 24,
                "endColumn": 30
            }
        ],
        "suppressedMessages": [],
        "errorCount": 14,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import React from 'react';\r\nimport DotIndicators from './DotIndicators';\r\n\r\nconst MainHeadlineCard = ({ article, onClick, onPrev, onNext, totalHeadlines, currentHeadlineIndex, onDotClick }) => {\r\n  return (\r\n    <div className=\"relative w-full h-80 md:h-96 bg-yellow-400 rounded-2xl shadow-lg overflow-hidden group\">\r\n      <div className=\"absolute inset-0 z-10 cursor-pointer\" onClick={() => onClick(article)}></div>\r\n      <img\r\n        src={article.image}\r\n        alt={article.title}\r\n        className=\"absolute inset-0 w-full h-full object-cover opacity-70 group-hover:opacity-100 transition-opacity duration-500\"\r\n      />\r\n      <div className=\"absolute inset-0 bg-gradient-to-t from-gray-900 to-transparent p-6 flex flex-col justify-end text-white z-20\">\r\n        <h3\r\n          onClick={(e) => { e.stopPropagation(); onClick(article); }}\r\n          className=\"text-2xl md:text-3xl font-bold mb-2 leading-tight cursor-pointer hover:underline\"\r\n        >\r\n          {article.title}\r\n        </h3>\r\n        <p className=\"text-base md:text-lg mb-4 opacity-90\">{article.description}</p>\r\n        <div className=\"flex items-center text-sm opacity-80\">\r\n          <span>{article.date}</span>\r\n          <span className=\"mx-2\">•</span>\r\n          <span>{article.time}</span>\r\n        </div>\r\n      </div>\r\n      <button\r\n        onClick={(e) => { e.stopPropagation(); onPrev(); }}\r\n        className=\"absolute left-4 top-8 transform -translate-y-1/2 bg-gray-800 bg-opacity-70 text-white p-2 rounded-full shadow-lg transition-opacity duration-300 z-30 hover:bg-gray-700\"\r\n        aria-label=\"Previous Headline\"\r\n      >\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 md:h-6 md:w-6 cursor-pointer\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\r\n        </svg>\r\n      </button>\r\n      <button\r\n        onClick={(e) => { e.stopPropagation(); onNext(); }}\r\n        className=\"absolute right-4 top-8 transform -translate-y-1/2 bg-gray-800 bg-opacity-70 text-white p-2 rounded-full shadow-lg transition-opacity duration-300 z-30 hover:bg-gray-700\"\r\n        aria-label=\"Next Headline\"\r\n      >\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 md:h-6 md:w-6 cursor-pointer\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n        </svg>\r\n      </button>\r\n      <DotIndicators count={totalHeadlines} activeIndex={currentHeadlineIndex} onDotClick={onDotClick} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainHeadlineCard;",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\Homepage\\headlinesHomePage\\components\\RelativeNewsCard.jsx",
        "messages": [
            {
                "ruleId": "no-unused-vars",
                "severity": 2,
                "message": "'React' is defined but never used.",
                "line": 1,
                "column": 8,
                "nodeType": "Identifier",
                "messageId": "unusedVar",
                "endLine": 1,
                "endColumn": 13,
                "suggestions": [
                    {
                        "messageId": "removeVar",
                        "data": {
                            "varName": "React"
                        },
                        "fix": {
                            "range": [
                                7,
                                18
                            ],
                            "text": ""
                        },
                        "desc": "Remove unused variable 'React'."
                    }
                ]
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article' is missing in props validation",
                "line": 3,
                "column": 29,
                "nodeType": "Property",
                "messageId": "missingPropType",
                "endLine": 3,
                "endColumn": 36
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'onClick' is missing in props validation",
                "line": 3,
                "column": 38,
                "nodeType": "Property",
                "messageId": "missingPropType",
                "endLine": 3,
                "endColumn": 45
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.title' is missing in props validation",
                "line": 10,
                "column": 159,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 10,
                "endColumn": 164
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.date' is missing in props validation",
                "line": 11,
                "column": 55,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 11,
                "endColumn": 59
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.time' is missing in props validation",
                "line": 11,
                "column": 72,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 11,
                "endColumn": 76
            }
        ],
        "suppressedMessages": [],
        "errorCount": 6,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import React from 'react';\r\n\r\nconst RelativeNewsCard = ({ article, onClick }) => {\r\n  return (\r\n    <div\r\n      className=\"flex items-center justify-between bg-gray-200 rounded-lg p-3 mb-2 cursor-pointer transform transition-all duration-200 ease-in-out hover:bg-gray-300 hover:shadow-md\"\r\n      onClick={() => onClick(article)}\r\n    >\r\n      <div>\r\n        <h4 className=\"text-sm font-medium text-gray-800 cursor-pointer hover:underline\" onClick={(e) => { e.stopPropagation(); onClick(article); }}>{article.title}</h4>\r\n        <p className=\"text-xs text-gray-500\">{article.date} • {article.time}</p>\r\n      </div>\r\n      <button className=\"text-gray-500 cursor-pointer hover:text-blue-600\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 0a3 3 0 110 2.684 3 3 0 010-2.684zm0 0a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z\" />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RelativeNewsCard;",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\Homepage\\headlinesHomePage\\components\\TodayHeadlines.jsx",
        "messages": [
            {
                "ruleId": "no-unused-vars",
                "severity": 2,
                "message": "'React' is defined but never used.",
                "line": 1,
                "column": 8,
                "nodeType": "Identifier",
                "messageId": "unusedVar",
                "endLine": 1,
                "endColumn": 13,
                "suggestions": [
                    {
                        "messageId": "removeVar",
                        "data": {
                            "varName": "React"
                        },
                        "fix": {
                            "range": [
                                7,
                                13
                            ],
                            "text": ""
                        },
                        "desc": "Remove unused variable 'React'."
                    }
                ]
            },
            {
                "ruleId": "react-hooks/exhaustive-deps",
                "severity": 1,
                "message": "React Hook useEffect has missing dependencies: 'autoAdvanceInterval' and 'startAutoAdvance'. Either include them or remove the dependency array.",
                "line": 35,
                "column": 6,
                "nodeType": "ArrayExpression",
                "endLine": 35,
                "endColumn": 8,
                "suggestions": [
                    {
                        "desc": "Update the dependencies array to be: [autoAdvanceInterval, startAutoAdvance]",
                        "fix": {
                            "range": [
                                1407,
                                1409
                            ],
                            "text": "[autoAdvanceInterval, startAutoAdvance]"
                        }
                    }
                ]
            },
            {
                "ruleId": "react/no-unescaped-entities",
                "severity": 2,
                "message": "`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.",
                "line": 89,
                "column": 86,
                "nodeType": "JSXText",
                "messageId": "unescapedEntityAlts",
                "suggestions": [
                    {
                        "messageId": "replaceWithAlt",
                        "data": {
                            "alt": "&apos;"
                        },
                        "fix": {
                            "range": [
                                3207,
                                3224
                            ],
                            "text": "Today&apos;s Headlines"
                        },
                        "desc": "Replace with `&apos;`."
                    },
                    {
                        "messageId": "replaceWithAlt",
                        "data": {
                            "alt": "&lsquo;"
                        },
                        "fix": {
                            "range": [
                                3207,
                                3224
                            ],
                            "text": "Today&lsquo;s Headlines"
                        },
                        "desc": "Replace with `&lsquo;`."
                    },
                    {
                        "messageId": "replaceWithAlt",
                        "data": {
                            "alt": "&#39;"
                        },
                        "fix": {
                            "range": [
                                3207,
                                3224
                            ],
                            "text": "Today&#39;s Headlines"
                        },
                        "desc": "Replace with `&#39;`."
                    },
                    {
                        "messageId": "replaceWithAlt",
                        "data": {
                            "alt": "&rsquo;"
                        },
                        "fix": {
                            "range": [
                                3207,
                                3224
                            ],
                            "text": "Today&rsquo;s Headlines"
                        },
                        "desc": "Replace with `&rsquo;`."
                    }
                ]
            }
        ],
        "suppressedMessages": [],
        "errorCount": 2,
        "fatalErrorCount": 0,
        "warningCount": 1,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import React, { useState, useEffect } from 'react';\r\nimport MainHeadlineCard from './MainHeadlineCard';\r\nimport ChildHeadlineCard from './ChildHeadlineCard';\r\nimport RelativeNewsCard from './RelativeNewsCard';\r\nimport ArticleDetailPage from './ArticleDetailPage';\r\nimport articlesData from '../data/articlesData.json';\r\n// import ButtonCard from '../../../ButtonCard';\r\n// import {useNavigate } from 'react-router-dom';\r\n\r\nconst TodayHeadlines = () => {\r\n  const [mainHeadlines, setMainHeadlines] = useState([]);\r\n  const [childHeadlines, setChildHeadlines] = useState([]);\r\n  const [relativeNews, setRelativeNews] = useState([]);\r\n  const [currentMainHeadlineIndex, setCurrentMainHeadlineIndex] = useState(0);\r\n  const [selectedArticle, setSelectedArticle] = useState(null);\r\n  const [autoAdvanceInterval, setAutoAdvanceInterval] = useState(null);\r\n  // const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const main = articlesData.filter(article => article.type === 'main');\r\n    const children = articlesData.filter(article => article.type === 'child');\r\n    const relative = articlesData.filter(article => article.type === 'relative');\r\n\r\n    setMainHeadlines(main);\r\n    setChildHeadlines(children);\r\n    setRelativeNews(relative);\r\n\r\n    startAutoAdvance(main.length);\r\n\r\n    return () => {\r\n      if (autoAdvanceInterval) {\r\n        clearInterval(autoAdvanceInterval);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const startAutoAdvance = (numHeadlines) => {\r\n    if (autoAdvanceInterval) {\r\n      clearInterval(autoAdvanceInterval);\r\n    }\r\n    const interval = setInterval(() => {\r\n      setCurrentMainHeadlineIndex(prevIndex => (prevIndex + 1) % numHeadlines);\r\n    }, 5000);\r\n    setAutoAdvanceInterval(interval);\r\n  };\r\n\r\n  const handleArticleClick = (article) => {\r\n    setSelectedArticle(article);\r\n  };\r\n\r\n  const handleCloseDetail = () => {\r\n    setSelectedArticle(null);\r\n    startAutoAdvance(mainHeadlines.length);\r\n  };\r\n\r\n  const handlePrevHeadline = () => {\r\n    if (autoAdvanceInterval) {\r\n      clearInterval(autoAdvanceInterval);\r\n      setAutoAdvanceInterval(null);\r\n    }\r\n    setCurrentMainHeadlineIndex(prevIndex => (prevIndex - 1 + mainHeadlines.length) % mainHeadlines.length);\r\n  };\r\n\r\n  const handleNextHeadline = () => {\r\n    if (autoAdvanceInterval) {\r\n      clearInterval(autoAdvanceInterval);\r\n      setAutoAdvanceInterval(null);\r\n    }\r\n    setCurrentMainHeadlineIndex(prevIndex => (prevIndex + 1) % mainHeadlines.length);\r\n  };\r\n\r\n  const handleDotClick = (index) => {\r\n    if (autoAdvanceInterval) {\r\n      clearInterval(autoAdvanceInterval);\r\n      setAutoAdvanceInterval(null);\r\n    }\r\n    setCurrentMainHeadlineIndex(index);\r\n  };\r\n  // const handleSeeMore=()=>{\r\n  //   console.log(\"this is temporarily unavailable\");\r\n  //   navigate(\"/notfound\");\r\n  // }\r\n\r\n  return (\r\n    <div className=\"min-h-screen rounded-2xl bg-gradient-to-r from-gray-950 to-purple-900/90 shadow-lg  text-gray-100 font-sans p-4 md:p-8 relative\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        <header className=\"flex flex-col md:flex-row justify-between items-start md:items-center mb-8\">\r\n          <div>\r\n            <h1 className=\"text-4xl md:text-5xl font-extrabold text-white mb-2\">Today's Headlines</h1>\r\n            <p className=\"text-lg md:text-xl text-gray-300\">Catch up on the latest news from around the globe.</p>\r\n          </div>\r\n          {/* <ButtonCard\r\n\r\n                        \r\n                        onClick={handleSeeMore}\r\n                        // className={`px-4 py-2 rounded-full text-sm font-medium transition-all duration-300 \r\n                        //   ${activeTopic === topic\r\n                        //     ? 'bg-blue-600 text-white shadow-lg'\r\n                        //     : 'bg-gray-700 hover:bg-gray-600 text-gray-300 hover:text-white'\r\n                        //   }`}\r\n                        size='small'\r\n                        animationType=\"glow\"\r\n                        styles='border border-gray-700'\r\n                        iconPosition='right'\r\n                        icon={null}\r\n                        >\r\n                          See More\r\n            </ButtonCard> */}\r\n        </header>\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n          <section className=\"lg:col-span-2\">\r\n            {mainHeadlines.length > 0 && (\r\n              <div className=\"mb-8\">\r\n                <MainHeadlineCard\r\n                  article={mainHeadlines[currentMainHeadlineIndex]}\r\n                  onClick={handleArticleClick}\r\n                  onPrev={handlePrevHeadline}\r\n                  onNext={handleNextHeadline}\r\n                  totalHeadlines={mainHeadlines.length}\r\n                  currentHeadlineIndex={currentMainHeadlineIndex}\r\n                  onDotClick={handleDotClick}\r\n                />\r\n              </div>\r\n            )}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n              {childHeadlines.map(article => (\r\n                <ChildHeadlineCard\r\n                  key={article.id}\r\n                  article={article}\r\n                  onClick={handleArticleClick}\r\n                />\r\n              ))}\r\n            </div>\r\n          </section>\r\n          <aside className=\"lg:col-span-1\">\r\n            <h2 className=\"text-xl md:text-2xl font-bold mb-6\">Relative News</h2>\r\n            <div className=\"space-y-3\">\r\n              {relativeNews.map(article => (\r\n                <RelativeNewsCard\r\n                  key={article.id}\r\n                  article={article}\r\n                  onClick={handleArticleClick}\r\n                />\r\n              ))}\r\n            </div>\r\n          </aside>\r\n        </div>\r\n      </div>\r\n      <ArticleDetailPage article={selectedArticle} onClose={handleCloseDetail} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodayHeadlines;",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\Homepage\\newsHomePage\\components\\ArticleDetail.jsx",
        "messages": [
            {
                "ruleId": "no-unused-vars",
                "severity": 2,
                "message": "'React' is defined but never used.",
                "line": 1,
                "column": 8,
                "nodeType": "Identifier",
                "messageId": "unusedVar",
                "endLine": 1,
                "endColumn": 13,
                "suggestions": [
                    {
                        "messageId": "removeVar",
                        "data": {
                            "varName": "React"
                        },
                        "fix": {
                            "range": [
                                7,
                                13
                            ],
                            "text": ""
                        },
                        "desc": "Remove unused variable 'React'."
                    }
                ]
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article' is missing in props validation",
                "line": 3,
                "column": 26,
                "nodeType": "Property",
                "messageId": "missingPropType",
                "endLine": 3,
                "endColumn": 33
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'onBack' is missing in props validation",
                "line": 3,
                "column": 35,
                "nodeType": "Property",
                "messageId": "missingPropType",
                "endLine": 3,
                "endColumn": 41
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.category' is missing in props validation",
                "line": 27,
                "column": 81,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 27,
                "endColumn": 89
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.title' is missing in props validation",
                "line": 28,
                "column": 93,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 28,
                "endColumn": 98
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.date' is missing in props validation",
                "line": 29,
                "column": 54,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 29,
                "endColumn": 58
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.time' is missing in props validation",
                "line": 29,
                "column": 70,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 29,
                "endColumn": 74
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.imageUrl' is missing in props validation",
                "line": 30,
                "column": 20,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 30,
                "endColumn": 28
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.imageUrl' is missing in props validation",
                "line": 31,
                "column": 31,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 31,
                "endColumn": 39
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.title' is missing in props validation",
                "line": 31,
                "column": 54,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 31,
                "endColumn": 59
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article.content' is missing in props validation",
                "line": 34,
                "column": 25,
                "nodeType": "Identifier",
                "messageId": "missingPropType",
                "endLine": 34,
                "endColumn": 32
            }
        ],
        "suppressedMessages": [],
        "errorCount": 11,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import React, { useEffect } from 'react';\r\n\r\nconst ArticleDetail = ({ article, onBack }) => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  if (!article) {\r\n    return (\r\n      <div className=\"bg-[#12121c] min-h-screen text-white flex flex-col items-center justify-center p-8\">\r\n        <h1 className=\"text-2xl font-bold mb-4\">Article not found.</h1>\r\n        <button onClick={onBack} className=\"px-6 py-2 bg-blue-600 hover:bg-blue-700 rounded-lg transition-colors\">\r\n          Go Back\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-[#12121c] min-h-screen text-white font-sans p-4 sm:p-6 lg:p-8 animate-fade-in\">\r\n      <div className=\"max-w-4xl mx-auto\">\r\n        <button onClick={onBack} className=\"mb-8 flex items-center gap-2 text-blue-400 hover:text-blue-300 transition-colors\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fillRule=\"evenodd\" d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\" clipRule=\"evenodd\" /></svg>\r\n          Back to News\r\n        </button>\r\n        <div className=\"bg-[#1e1e2d] p-6 sm:p-8 rounded-lg\">\r\n          <p className=\"text-sm font-semibold text-blue-400 uppercase\">{article.category || 'News'}</p>\r\n          <h1 className=\"text-3xl sm:text-4xl font-extrabold text-white mt-2 mb-4\">{article.title}</h1>\r\n          <p className=\"text-gray-400 mb-6\">{article.date || article.time}</p>\r\n          {article.imageUrl && (\r\n            <img src={article.imageUrl} alt={article.title} className=\"w-full h-auto max-h-[450px] object-cover rounded-lg mb-8\" />\r\n          )}\r\n          <div className=\"prose prose-invert prose-lg max-w-none text-gray-300\">\r\n            <p>{article.content || \"This is placeholder content for the article. In a real application, the full story would be displayed here, providing readers with all the details about the event or topic.\"}</p>\r\n            <p>Further paragraphs would continue the story, offering deeper insights, quotes, and analysis to give a comprehensive overview.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArticleDetail;",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\Homepage\\newsHomePage\\components\\BlockchainNews.jsx",
        "messages": [
            {
                "ruleId": "no-unused-vars",
                "severity": 2,
                "message": "'React' is defined but never used.",
                "line": 1,
                "column": 8,
                "nodeType": "Identifier",
                "messageId": "unusedVar",
                "endLine": 1,
                "endColumn": 13,
                "suggestions": [
                    {
                        "messageId": "removeVar",
                        "data": {
                            "varName": "React"
                        },
                        "fix": {
                            "range": [
                                7,
                                13
                            ],
                            "text": ""
                        },
                        "desc": "Remove unused variable 'React'."
                    }
                ]
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'onNavigate' is missing in props validation",
                "line": 5,
                "column": 27,
                "nodeType": "Property",
                "messageId": "missingPropType",
                "endLine": 5,
                "endColumn": 37
            }
        ],
        "suppressedMessages": [],
        "errorCount": 2,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import React, { useState, useEffect, useRef } from 'react';\r\nimport Card from './Card';\r\nimport mockData from '../data/mockData.json';\r\n\r\nconst BlockchainNews = ({ onNavigate }) => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const slides = mockData.blockchain;\r\n  const timeoutRef = useRef(null);\r\n\r\n  const resetTimeout = () => {\r\n    if (timeoutRef.current) {\r\n      clearTimeout(timeoutRef.current);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    resetTimeout();\r\n    timeoutRef.current = setTimeout(\r\n      () => setCurrentIndex((prevIndex) => (prevIndex === slides.length - 1 ? 0 : prevIndex + 1)),\r\n      5000\r\n    );\r\n    return () => {\r\n      resetTimeout();\r\n    };\r\n  }, [currentIndex, slides.length]);\r\n\r\n  const prevSlide = () => {\r\n    const isFirstSlide = currentIndex === 0;\r\n    const newIndex = isFirstSlide ? slides.length - 1 : currentIndex - 1;\r\n    setCurrentIndex(newIndex);\r\n  };\r\n\r\n  const nextSlide = () => {\r\n    const isLastSlide = currentIndex === slides.length - 1;\r\n    const newIndex = isLastSlide ? 0 : currentIndex + 1;\r\n    setCurrentIndex(newIndex);\r\n  };\r\n\r\n  const goToSlide = (slideIndex) => {\r\n    setCurrentIndex(slideIndex);\r\n  };\r\n\r\n  const currentArticle = slides[currentIndex];\r\n  const otherArticles = slides.filter((_, index) => index !== currentIndex).slice(0, 2);\r\n\r\n  return (\r\n    <div className=\"w-full space-y-6\">\r\n      <div className=\"relative\">\r\n        <Card article={currentArticle} onNavigate={onNavigate} className=\"overflow-hidden shadow-lg\">\r\n          <div className=\"relative h-64 md:h-80 w-full\">\r\n            <img src={currentArticle.imageUrl} alt={currentArticle.title} className=\"w-full h-full object-cover transition-transform duration-500 ease-in-out\" />\r\n            <div className=\"absolute inset-0 bg-gradient-to-t from-black/70 via-black/30 to-transparent\"></div>\r\n          </div>\r\n          <div className=\"p-6\">\r\n            <p className=\"text-sm font-semibold text-blue-400 uppercase\">{currentArticle.category}</p>\r\n            <h2 className=\"text-2xl font-bold text-white mt-2\">{currentArticle.title}</h2>\r\n            <p className=\"text-gray-400 text-sm mt-2\">{currentArticle.date}</p>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n      <div className=\"flex justify-center items-center space-x-6\">\r\n        <button onClick={prevSlide} className=\"p-2 rounded-full bg-gray-800/50 hover:bg-gray-700/70 text-white transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" /></svg>\r\n        </button>\r\n        <div className=\"flex items-center justify-center space-x-2\">\r\n          {slides.map((_, slideIndex) => (\r\n            <div\r\n              key={slideIndex}\r\n              onClick={() => goToSlide(slideIndex)}\r\n              className={`cursor-pointer h-2 rounded-full bg-gray-600 transition-all duration-500 ease-out ${currentIndex === slideIndex ? 'w-8 bg-blue-500' : 'w-2 hover:bg-gray-400'}`}\r\n            ></div>\r\n          ))}\r\n        </div>\r\n        <button onClick={nextSlide} className=\"p-2 rounded-full bg-gray-800/50 hover:bg-gray-700/70 text-white transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" /></svg>\r\n        </button>\r\n      </div>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n        {otherArticles.map(article => (\r\n          <Card key={article.id} article={article} onNavigate={onNavigate} className=\"overflow-hidden flex flex-col\">\r\n            <div className=\"h-40 w-full\">\r\n              <img src={article.imageUrl} alt={article.title} className=\"w-full h-full object-cover\"/>\r\n            </div>\r\n            <div className=\"p-4 flex-grow flex flex-col\">\r\n              <p className=\"text-xs font-semibold text-blue-400 uppercase\">{article.category}</p>\r\n              <h3 className=\"text-md font-bold text-white mt-1 flex-grow\">{article.title}</h3>\r\n              <p className=\"text-gray-400 text-xs mt-2\">{article.date} by {article.admin}</p>\r\n            </div>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlockchainNews;",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\Homepage\\newsHomePage\\components\\Card.jsx",
        "messages": [
            {
                "ruleId": "no-unused-vars",
                "severity": 2,
                "message": "'React' is defined but never used.",
                "line": 1,
                "column": 8,
                "nodeType": "Identifier",
                "messageId": "unusedVar",
                "endLine": 1,
                "endColumn": 13,
                "suggestions": [
                    {
                        "messageId": "removeVar",
                        "data": {
                            "varName": "React"
                        },
                        "fix": {
                            "range": [
                                7,
                                18
                            ],
                            "text": ""
                        },
                        "desc": "Remove unused variable 'React'."
                    }
                ]
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'article' is missing in props validation",
                "line": 3,
                "column": 17,
                "nodeType": "Property",
                "messageId": "missingPropType",
                "endLine": 3,
                "endColumn": 24
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'onNavigate' is missing in props validation",
                "line": 3,
                "column": 26,
                "nodeType": "Property",
                "messageId": "missingPropType",
                "endLine": 3,
                "endColumn": 36
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'className' is missing in props validation",
                "line": 3,
                "column": 38,
                "nodeType": "Property",
                "messageId": "missingPropType",
                "endLine": 3,
                "endColumn": 52
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'children' is missing in props validation",
                "line": 3,
                "column": 54,
                "nodeType": "Property",
                "messageId": "missingPropType",
                "endLine": 3,
                "endColumn": 62
            }
        ],
        "suppressedMessages": [],
        "errorCount": 5,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import React from 'react';\r\n\r\nconst Card = ({ article, onNavigate, className = '', children }) => (\r\n  <div\r\n    className={`bg-[#1e1e2d] rounded-lg cursor-pointer transform hover:scale-[1.02] transition-transform duration-300 ${className}`}\r\n    onClick={() => onNavigate(article)}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Card;",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\Homepage\\newsHomePage\\components\\LatestNews.jsx",
        "messages": [
            {
                "ruleId": "no-unused-vars",
                "severity": 2,
                "message": "'React' is defined but never used.",
                "line": 1,
                "column": 8,
                "nodeType": "Identifier",
                "messageId": "unusedVar",
                "endLine": 1,
                "endColumn": 13,
                "suggestions": [
                    {
                        "messageId": "removeVar",
                        "data": {
                            "varName": "React"
                        },
                        "fix": {
                            "range": [
                                7,
                                18
                            ],
                            "text": ""
                        },
                        "desc": "Remove unused variable 'React'."
                    }
                ]
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'onNavigate' is missing in props validation",
                "line": 4,
                "column": 23,
                "nodeType": "Property",
                "messageId": "missingPropType",
                "endLine": 4,
                "endColumn": 33
            }
        ],
        "suppressedMessages": [],
        "errorCount": 2,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import React from 'react';\r\nimport mockData from '../data/mockData.json';\r\n\r\nconst LatestNews = ({ onNavigate }) => (\r\n  <div className=\"bg-[#1e1e2d] p-6 rounded-lg h-full\">\r\n    <div className=\"h-full overflow-y-auto pr-2 scrollbar-thin scrollbar-thumb-gray-600 scrollbar-track-transparent\">\r\n      <div>\r\n        <h2 className=\"text-xl font-bold text-white mb-4 border-l-4 border-blue-500 pl-2\">Latest</h2>\r\n        <div className=\"space-y-5\">\r\n          {mockData.latest.map(item => (\r\n            <div key={item.id} className=\"cursor-pointer group\" onClick={() => onNavigate(item)}>\r\n              <h3 className=\"text-white font-semibold group-hover:text-blue-400 transition-colors\">{item.title}</h3>\r\n              <p className=\"text-gray-400 text-sm mt-1\">{item.date}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"mt-8\">\r\n        <h2 className=\"text-xl font-bold text-white mb-4 border-l-4 border-green-500 pl-2\">Press Releases</h2>\r\n        <div className=\"space-y-5\">\r\n          {mockData.pressReleases.map(item => (\r\n            <div key={item.id} className=\"cursor-pointer group\" onClick={() => onNavigate(item)}>\r\n              <h3 className=\"text-white font-semibold group-hover:text-green-400 transition-colors\">{item.title}</h3>\r\n              <p className=\"text-gray-400 text-sm mt-1\">{item.date}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default LatestNews;",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\Homepage\\newsHomePage\\components\\NewsHome.jsx",
        "messages": [
            {
                "ruleId": "no-unused-vars",
                "severity": 2,
                "message": "'React' is defined but never used.",
                "line": 1,
                "column": 8,
                "nodeType": "Identifier",
                "messageId": "unusedVar",
                "endLine": 1,
                "endColumn": 13,
                "suggestions": [
                    {
                        "messageId": "removeVar",
                        "data": {
                            "varName": "React"
                        },
                        "fix": {
                            "range": [
                                7,
                                18
                            ],
                            "text": ""
                        },
                        "desc": "Remove unused variable 'React'."
                    }
                ]
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'onNavigate' is missing in props validation",
                "line": 6,
                "column": 21,
                "nodeType": "Property",
                "messageId": "missingPropType",
                "endLine": 6,
                "endColumn": 31
            }
        ],
        "suppressedMessages": [],
        "errorCount": 2,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import React from 'react';\r\nimport LatestNews from './LatestNews';\r\nimport BlockchainNews from './BlockchainNews';\r\nimport RecommendedNews from './RecommendedNews';\r\n\r\nconst NewsHome = ({ onNavigate }) => {\r\n  return (\r\n    <div className=\"bg-[#12121c] min-h-screen text-white font-sans p-4 sm:p-6 lg:p-8\">\r\n      <div className=\"max-w-screen-2xl mx-auto\">\r\n        <main className=\"grid grid-cols-1 lg:grid-cols-12 gap-6\">\r\n          <aside className=\"lg:col-span-3 h-auto lg:h-[85vh]\">\r\n            <LatestNews onNavigate={onNavigate} />\r\n          </aside>\r\n          <section className=\"lg:col-span-6\">\r\n            <BlockchainNews onNavigate={onNavigate} />\r\n          </section>\r\n          <aside className=\"lg:col-span-3 h-auto lg:h-[85vh]\">\r\n            <RecommendedNews onNavigate={onNavigate} />\r\n          </aside>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewsHome;",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\Homepage\\newsHomePage\\components\\NewsHomePage.jsx",
        "messages": [
            {
                "ruleId": "no-unused-vars",
                "severity": 2,
                "message": "'React' is defined but never used.",
                "line": 1,
                "column": 8,
                "nodeType": "Identifier",
                "messageId": "unusedVar",
                "endLine": 1,
                "endColumn": 13,
                "suggestions": [
                    {
                        "messageId": "removeVar",
                        "data": {
                            "varName": "React"
                        },
                        "fix": {
                            "range": [
                                7,
                                13
                            ],
                            "text": ""
                        },
                        "desc": "Remove unused variable 'React'."
                    }
                ]
            },
            {
                "ruleId": "no-unused-vars",
                "severity": 2,
                "message": "'event' is defined but never used.",
                "line": 17,
                "column": 29,
                "nodeType": "Identifier",
                "messageId": "unusedVar",
                "endLine": 17,
                "endColumn": 34,
                "suggestions": [
                    {
                        "messageId": "removeVar",
                        "data": {
                            "varName": "event"
                        },
                        "fix": {
                            "range": [
                                576,
                                581
                            ],
                            "text": ""
                        },
                        "desc": "Remove unused variable 'event'."
                    }
                ]
            }
        ],
        "suppressedMessages": [],
        "errorCount": 2,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import React, { useState, useEffect } from 'react';\r\nimport NewsHome from './NewsHome';\r\nimport ArticleDetail from './ArticleDetail';\r\nimport mockData from '../data/mockData.json';\r\n\r\nconst allArticles = [\r\n  ...mockData.blockchain,\r\n  ...mockData.latest,\r\n  ...mockData.pressReleases,\r\n  ...mockData.recommended,\r\n].map(a => ({...a, slug: a.title.toLowerCase().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '') }));\r\n\r\nfunction NewsHomePage() {\r\n  const [currentRoute, setCurrentRoute] = useState({ page: 'home', slug: null });\r\n\r\n  useEffect(() => {\r\n    const handlePopState = (event) => {\r\n      const path = window.location.pathname;\r\n      if (path.startsWith('/article/')) {\r\n        const slug = path.split('/article/')[1];\r\n        setCurrentRoute({ page: 'detail', slug });\r\n      } else {\r\n        setCurrentRoute({ page: 'home', slug: null });\r\n      }\r\n    };\r\n    window.addEventListener('popstate', handlePopState);\r\n    return () => window.removeEventListener('popstate', handlePopState);\r\n  }, []);\r\n\r\n  const handleNavigate = (article) => {\r\n    const slug = article.slug || article.title.toLowerCase().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '');\r\n    const url = `/article/${slug}`;\r\n    window.history.pushState({ slug }, article.title, url);\r\n    setCurrentRoute({ page: 'detail', slug });\r\n  };\r\n\r\n  const handleBack = () => {\r\n    window.history.pushState({}, 'Home', '/');\r\n    setCurrentRoute({ page: 'home', slug: null });\r\n  };\r\n\r\n  if (currentRoute.page === 'home') {\r\n    return <NewsHome onNavigate={handleNavigate} />;\r\n  } else {\r\n    const article = allArticles.find(a => a.slug === currentRoute.slug);\r\n    return <ArticleDetail article={article} onBack={handleBack} />;\r\n  }\r\n}\r\n\r\nexport default NewsHomePage;",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\Homepage\\newsHomePage\\components\\RecommendedNews.jsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\Homepage\\nftHomePage\\NFTAPP.jsx",
        "messages": [
            {
                "ruleId": "no-unused-vars",
                "severity": 2,
                "message": "'React' is defined but never used.",
                "line": 1,
                "column": 8,
                "nodeType": "Identifier",
                "messageId": "unusedVar",
                "endLine": 1,
                "endColumn": 13,
                "suggestions": [
                    {
                        "messageId": "removeVar",
                        "data": {
                            "varName": "React"
                        },
                        "fix": {
                            "range": [
                                7,
                                13
                            ],
                            "text": ""
                        },
                        "desc": "Remove unused variable 'React'."
                    }
                ]
            },
            {
                "ruleId": "react/no-unknown-property",
                "severity": 2,
                "message": "Unknown property 'jsx' found",
                "line": 130,
                "column": 14,
                "nodeType": "JSXAttribute",
                "messageId": "unknownProp",
                "endLine": 130,
                "endColumn": 17
            }
        ],
        "suppressedMessages": [],
        "errorCount": 2,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import React, { useState, useEffect, useCallback,useRef } from 'react';\r\nimport MainNftCard from '../nftHomePage/components/MainNftCard';\r\nimport ChildNftCard from '../nftHomePage/components/ChildNftCard';\r\nimport TrendsNftTable from '../nftHomePage/components/TrendsNftTable';\r\nimport NftDetailPage from '../nftHomePage/components/NftDetailPage';\r\nimport CollectionDetailPage from '../nftHomePage/components/CollectionDetailPage';\r\n// import '../../../index.css'\r\n\r\nimport nftData from '../nftHomePage/data/nftData.json';\r\n\r\nconst NFTAPP = () => {\r\n  const [mainNfts, setMainNfts] = useState([]);\r\n  const [childNfts, setChildNfts] = useState([]);\r\n  const [trendNfts, setTrendNfts] = useState([]);\r\n  const [currentMainNftIndex, setCurrentMainNftIndex] = useState(0);\r\n  const [selectedNft, setSelectedNft] = useState(null);\r\n  const [selectedCollection, setSelectedCollection] = useState(null);\r\n  const autoAdvanceIntervalRef = useRef(null);\r\n\r\n  // Function to start (or restart) the auto-advance interval\r\n  const startAutoAdvance = useCallback((numNfts) => {\r\n    // Clear any existing interval first using the ref\r\n    if (autoAdvanceIntervalRef.current) {\r\n      clearInterval(autoAdvanceIntervalRef.current);\r\n    }\r\n    if (numNfts > 0) {\r\n      const interval = setInterval(() => {\r\n        setCurrentMainNftIndex(prevIndex =>\r\n          (prevIndex + 1) % numNfts\r\n        );\r\n      }, 5000);\r\n      autoAdvanceIntervalRef.current = interval;\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Separate NFTs based on their type\r\n    const main = nftData.filter(nft => nft.type === 'main');\r\n    const children = nftData.filter(nft => nft.type === 'child');\r\n    const trends = nftData.filter(nft => nft.type === 'trend');\r\n\r\n    setMainNfts(main);\r\n    setChildNfts(children);\r\n    setTrendNfts(trends);\r\n\r\n    // Initial auto-advance setup\r\n    startAutoAdvance(main.length);\r\n\r\n    return () => {\r\n      // Clear interval on unmount or re-render of this effect\r\n      if (autoAdvanceIntervalRef.current) {\r\n        clearInterval(autoAdvanceIntervalRef.current);\r\n      }\r\n    };\r\n  }, [startAutoAdvance]);\r\n\r\n  const handleNftClick = (nft) => {\r\n    setSelectedNft(nft);\r\n    // When an NFT detail page opens, clear collection detail if open\r\n    setSelectedCollection(null);\r\n    // Clear auto-advance on manual interaction\r\n    if (autoAdvanceIntervalRef.current) {\r\n      clearInterval(autoAdvanceIntervalRef.current);\r\n      autoAdvanceIntervalRef.current = null;\r\n    }\r\n  };\r\n\r\n  const handleCloseNftDetail = () => {\r\n    setSelectedNft(null);\r\n    // Restart auto-advance when closing the detail page\r\n    startAutoAdvance(mainNfts.length);\r\n  };\r\n\r\n  const handleCollectionClick = (collectionName) => {\r\n    // Find all NFTs belonging to this collection\r\n    const collectionNfts = nftData.filter(nft => nft.collection === collectionName && nft.type !== 'trend');\r\n    setSelectedCollection({\r\n      name: collectionName,\r\n      nfts: collectionNfts\r\n    });\r\n    // When a collection detail page opens, clear NFT detail if open\r\n    setSelectedNft(null);\r\n    // Clear auto-advance on manual interaction\r\n    if (autoAdvanceIntervalRef.current) {\r\n      clearInterval(autoAdvanceIntervalRef.current);\r\n      autoAdvanceIntervalRef.current = null;\r\n    }\r\n  };\r\n\r\n  const handleCloseCollectionDetail = () => {\r\n    setSelectedCollection(null);\r\n    // Restart auto-advance when closing the detail page\r\n    startAutoAdvance(mainNfts.length);\r\n  };\r\n\r\n\r\n  const handlePrevNft = () => {\r\n    // Clear auto-advance on manual interaction\r\n    if (autoAdvanceIntervalRef.current) {\r\n      clearInterval(autoAdvanceIntervalRef.current);\r\n      autoAdvanceIntervalRef.current = null;\r\n    }\r\n    setCurrentMainNftIndex(prevIndex =>\r\n      (prevIndex - 1 + mainNfts.length) % mainNfts.length\r\n    );\r\n  };\r\n\r\n  const handleNextNft = () => {\r\n    // Clear auto-advance on manual interaction\r\n    if (autoAdvanceIntervalRef.current) {\r\n      clearInterval(autoAdvanceIntervalRef.current);\r\n      autoAdvanceIntervalRef.current = null;\r\n    }\r\n    setCurrentMainNftIndex(prevIndex =>\r\n      (prevIndex + 1) % mainNfts.length\r\n    );\r\n  };\r\n\r\n  const handleDotClick = (index) => {\r\n    // Clear auto-advance on manual interaction\r\n    if (autoAdvanceIntervalRef.current) {\r\n      clearInterval(autoAdvanceIntervalRef.current);\r\n      autoAdvanceIntervalRef.current = null;\r\n    }\r\n    setCurrentMainNftIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen  rounded-lg shadow-lg  text-gray-100 font-sans p-4 md:p-8 relative\">\r\n      <style jsx>{`\r\n    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap');\r\nbody {\r\n  font-family: 'Inter', sans-serif;\r\n}\r\n        @keyframes fadeIn { from { opacity: 0; transform: translateY(10px); } to { opacity: 1; transform: translateY(0); } }\r\n  @keyframes scaleIn { from { transform: scale(0.95); opacity: 0; } to { transform: scale(1); opacity: 1; } }\r\n  @keyframes fadeInUp { from { opacity: 0; transform: translateY(20px); } to { opacity: 1; transform: translateY(0); } }\r\n\r\n  .animate-fade-in { animation: fadeIn 0.5s ease-out forwards; }\r\n  .animate-scale-in { animation: scaleIn 0.3s ease-out forwards; }\r\n  .animate-fade-in-up { animation: fadeInUp 0.6s ease-out forwards; }\r\n      `}</style>\r\n\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        {/* Header */}\r\n        <header className=\"flex flex-col md:flex-row justify-between items-start md:items-center mb-8 animate-fade-in\">\r\n          <div>\r\n            <h1 className=\"text-4xl md:text-5xl font-extrabold text-white mb-2\">\r\n              Top NFT\r\n            </h1>\r\n            <p className=\"text-lg md:text-xl text-gray-300\">\r\n              Discover the hottest NFTs on the market.\r\n            </p>\r\n          </div>\r\n          <button className=\"mt-4 md:mt-0 bg-teal-500 text-gray-900 px-6 py-2 rounded-full font-semibold hover:bg-teal-400 transition-colors duration-300 shadow-md\">\r\n            See More\r\n          </button>\r\n        </header>\r\n\r\n        {/* Main Content Grid */}\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n          {/* Left Section: Main NFT & Child NFTs */}\r\n          <section className=\"lg:col-span-2\">\r\n            {/* Main NFT */}\r\n            {mainNfts.length > 0 && (\r\n              <div className=\"mb-8\">\r\n                <MainNftCard\r\n                  nft={mainNfts[currentMainNftIndex]}\r\n                  onClick={handleNftClick}\r\n                  onPrev={handlePrevNft}\r\n                  onNext={handleNextNft}\r\n                  totalNfts={mainNfts.length}\r\n                  currentNftIndex={currentMainNftIndex}\r\n                  onDotClick={handleDotClick}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {/* Child NFTs */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n              {childNfts.map(nft => (\r\n                <ChildNftCard\r\n                  key={nft.id}\r\n                  nft={nft}\r\n                  onClick={handleNftClick}\r\n                  onCollectionClick={handleCollectionClick} // Pass new handler\r\n                />\r\n              ))}\r\n            </div>\r\n          </section>\r\n\r\n          {/* Right Section: Trends NFT */}\r\n          <aside className=\"lg:col-span-1\">\r\n            <TrendsNftTable trends={trendNfts} onClick={handleNftClick} />\r\n          </aside>\r\n        </div>\r\n      </div>\r\n\r\n      {/* NFT Detail Page */}\r\n      <NftDetailPage\r\n        nft={selectedNft}\r\n        onClose={handleCloseNftDetail}\r\n        onNftClick={handleNftClick}\r\n        onCollectionClick={handleCollectionClick}\r\n      />\r\n\r\n      {/* Collection Detail Page */}\r\n      <CollectionDetailPage\r\n        collectionData={selectedCollection}\r\n        onClose={handleCloseCollectionDetail}\r\n        onNftClick={handleNftClick} // Allow clicking NFTs within collection to open their detail\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NFTAPP;",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\Homepage\\nftHomePage\\components\\ChildNftCard.jsx",
        "messages": [
            {
                "ruleId": "no-unused-vars",
                "severity": 2,
                "message": "'React' is defined but never used.",
                "line": 1,
                "column": 8,
                "nodeType": "Identifier",
                "messageId": "unusedVar",
                "endLine": 1,
                "endColumn": 13,
                "suggestions": [
                    {
                        "messageId": "removeVar",
                        "data": {
                            "varName": "React"
                        },
                        "fix": {
                            "range": [
                                7,
                                18
                            ],
                            "text": ""
                        },
                        "desc": "Remove unused variable 'React'."
                    }
                ]
            }
        ],
        "suppressedMessages": [],
        "errorCount": 1,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ChildNftCard = ({ nft, onClick, onCollectionClick }) => {\r\n  return (\r\n    <div\r\n      className=\"w-full bg-purple-900 rounded-lg shadow-lg overflow-hidden flex flex-col p-4 space-y-4 transition-all duration-300 ease-in-out hover:shadow-xl hover:-translate-y-1 animate-fade-in-up\"\r\n    >\r\n      {/* Left Section: Image */}\r\n      <div className=\"relative w-full flex-shrink-0 rounded-lg overflow-hidden\">\r\n        <img\r\n          src={nft.image}\r\n          alt={nft.name}\r\n          className=\"w-full h-32 object-cover rounded-lg\"\r\n          onError={(e) => { e.target.onerror = null; e.target.src = '[https://placehold.co/400x300/CCCCCC/000000?text=NFT+Image+Error](https://placehold.co/400x300/CCCCCC/000000?text=NFT+Image+Error)'; }}\r\n        />\r\n      </div>\r\n\r\n      {/* Right Section: Details */}\r\n      <div className=\"flex-grow flex flex-col justify-between text-white\">\r\n        <div>\r\n          <div className=\"flex justify-between items-baseline mb-2\">\r\n            <h4 className=\"text-lg font-semibold cursor-pointer hover:underline\" onClick={(e) => { e.stopPropagation(); onClick(nft); }}>{nft.name}</h4>\r\n            {nft.nftId && <span className=\"text-sm font-medium text-gray-300\">{nft.nftId}</span>}\r\n            {nft.rank && <span className=\"text-sm font-medium text-gray-300 ml-2\">{nft.rank}</span>}\r\n          </div>\r\n\r\n          <div className=\"bg-purple-200 flex items-center justify-between rounded-md p-2 mb-2\">\r\n            <p className=\"text-xs text-purple-800\">Floor price</p>\r\n            <p className=\"text-lg font-bold text-purple-900\">{nft.floorPrice}</p>\r\n            {nft.usdPrice && <p className=\"text-sm text-purple-700\">{nft.usdPrice}</p>}\r\n          </div>\r\n\r\n          <div className=\"text-center cursor-pointer no-underline hover:underline text-sm text-gray-300 mb-2\">\r\n            <span>{nft.seller}</span> → <span>{nft.buyer}</span>\r\n          </div>\r\n          {nft.recentTime && <p className=\"text-center text-xs text-gray-300 mb-3\">{nft.recentTime}</p>}\r\n        </div>\r\n\r\n        <div className=\"flex flex-col md:flex-row justify-between space-y-2 md:space-y-0 md:space-x-2 mt-2\">\r\n          <button\r\n            onClick={(e) => { e.stopPropagation(); onClick(nft); }}\r\n            className=\"flex-1 text-sm bg-green-500 cursor-pointer text-white py-2 rounded-md font-semibold hover:bg-green-600 transition-colors duration-200\"\r\n          >\r\n            See Item\r\n          </button>\r\n          {nft.collection && (\r\n            <button\r\n              onClick={(e) => { e.stopPropagation(); onCollectionClick(nft.collection); }}\r\n              className=\"flex-1 text-sm cursor-pointer bg-blue-500 text-white py-2 rounded-md font-semibold hover:bg-blue-600 transition-colors duration-200\"\r\n            >\r\n              See Collection\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nChildNftCard.propTypes = {\r\n  nft: PropTypes.object.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  onCollectionClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ChildNftCard;",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\Homepage\\nftHomePage\\components\\CollectionDetailPage.jsx",
        "messages": [
            {
                "ruleId": "no-unused-vars",
                "severity": 2,
                "message": "'React' is defined but never used.",
                "line": 1,
                "column": 8,
                "nodeType": "Identifier",
                "messageId": "unusedVar",
                "endLine": 1,
                "endColumn": 13,
                "suggestions": [
                    {
                        "messageId": "removeVar",
                        "data": {
                            "varName": "React"
                        },
                        "fix": {
                            "range": [
                                7,
                                13
                            ],
                            "text": ""
                        },
                        "desc": "Remove unused variable 'React'."
                    }
                ]
            }
        ],
        "suppressedMessages": [],
        "errorCount": 1,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ChildNftCard from './ChildNftCard';\r\nimport { X } from 'lucide-react'; // For close icon\r\n\r\nconst CollectionDetailPage = ({ collectionData, onClose, onNftClick }) => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  useEffect(() => {\r\n    setIsVisible(true);\r\n    return () => setIsVisible(false);\r\n  }, [collectionData]);\r\n\r\n  if (!collectionData) return null;\r\n\r\n  return (\r\n    <div\r\n      className={`fixed inset-0 bg-gray-900 bg-opacity-90 flex items-center justify-center p-4 z-50 transition-opacity duration-500 ${isVisible ? 'opacity-100' : 'opacity-0'}`}\r\n    >\r\n      <div className={`bg-white rounded-xl shadow-2xl max-w-5xl w-full max-h-[90vh] overflow-y-auto transform transition-all duration-500 ${isVisible ? 'scale-100' : 'scale-95'}`}>\r\n        <div className=\"relative p-6 md:p-8\">\r\n          <button\r\n            onClick={onClose}\r\n            className=\"absolute top-4 right-4 cursor-pointer bg-gray-800 text-white rounded-full p-2 shadow-lg hover:bg-gray-700 transition-colors duration-300\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <X size={24} />\r\n          </button>\r\n          <h1 className=\"text-3xl md:text-4xl font-extrabold text-gray-900 mb-4 leading-tight\">\r\n            Collection: {collectionData.name}\r\n          </h1>\r\n          <p className=\"text-lg text-gray-700 mb-6\">\r\n            Explore NFTs from the {collectionData.name} collection.\r\n          </p>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            {collectionData.nfts.length > 0 ? (\r\n              collectionData.nfts.map(nft => (\r\n                <ChildNftCard\r\n                  key={nft.id}\r\n                  nft={nft}\r\n                  onClick={onNftClick}\r\n                  onCollectionClick={() => { /* No-op or specific collection action */ }}\r\n                />\r\n              ))\r\n            ) : (\r\n              <p className=\"text-gray-600 col-span-full\">No NFTs found in this collection.</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCollectionDetailPage.propTypes = {\r\n  collectionData: PropTypes.object,\r\n  onClose: PropTypes.func.isRequired,\r\n  onNftClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CollectionDetailPage;",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\Homepage\\nftHomePage\\components\\ConfirmationModal.jsx",
        "messages": [
            {
                "ruleId": "no-unused-vars",
                "severity": 2,
                "message": "'React' is defined but never used.",
                "line": 1,
                "column": 8,
                "nodeType": "Identifier",
                "messageId": "unusedVar",
                "endLine": 1,
                "endColumn": 13,
                "suggestions": [
                    {
                        "messageId": "removeVar",
                        "data": {
                            "varName": "React"
                        },
                        "fix": {
                            "range": [
                                7,
                                18
                            ],
                            "text": ""
                        },
                        "desc": "Remove unused variable 'React'."
                    }
                ]
            }
        ],
        "suppressedMessages": [],
        "errorCount": 1,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { X } from 'lucide-react'; // Added X for close icon\r\n\r\nconst ConfirmationModal = ({ isOpen, onClose, title, message, onConfirm }) => {\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-gray-900 bg-opacity-70 flex items-center justify-center p-4 z-50 animate-fade-in\">\r\n      <div className=\"bg-white rounded-lg shadow-xl p-6 max-w-sm w-full transform scale-95 animate-scale-in\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h3 className=\"text-xl font-bold text-gray-900\">{title}</h3>\r\n          <button onClick={onClose} className=\"text-gray-500 hover:text-gray-700\">\r\n            <X size={24} />\r\n          </button>\r\n        </div>\r\n        <p className=\"text-gray-700 mb-6\">{message}</p>\r\n        <div className=\"flex justify-end space-x-3\">\r\n          <button\r\n            onClick={onClose}\r\n            className=\"px-4 py-2 rounded-md border border-gray-300 text-gray-700 hover:bg-gray-100 transition-colors\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            onClick={onConfirm}\r\n            className=\"px-4 py-2 rounded-md bg-blue-600 text-white hover:bg-blue-700 transition-colors\"\r\n          >\r\n            Confirm\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nConfirmationModal.propTypes = {\r\n  isOpen: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  message: PropTypes.string.isRequired,\r\n  onConfirm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ConfirmationModal;",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\Homepage\\nftHomePage\\components\\DotIndicators.jsx",
        "messages": [
            {
                "ruleId": "no-unused-vars",
                "severity": 2,
                "message": "'React' is defined but never used.",
                "line": 1,
                "column": 8,
                "nodeType": "Identifier",
                "messageId": "unusedVar",
                "endLine": 1,
                "endColumn": 13,
                "suggestions": [
                    {
                        "messageId": "removeVar",
                        "data": {
                            "varName": "React"
                        },
                        "fix": {
                            "range": [
                                7,
                                18
                            ],
                            "text": ""
                        },
                        "desc": "Remove unused variable 'React'."
                    }
                ]
            }
        ],
        "suppressedMessages": [],
        "errorCount": 1,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DotIndicators = ({ count, activeIndex, onDotClick }) => {\r\n  return (\r\n    <div className=\"flex justify-center items-center space-x-2 absolute bottom-4 w-full z-30\">\r\n      {Array.from({ length: count }).map((_, index) => (\r\n        <span\r\n          key={index}\r\n          className={`\r\n            block rounded-full cursor-pointer transition-all duration-300 ease-in-out\r\n            ${index === activeIndex ? 'w-6 h-2 bg-white' : 'w-2 h-2 bg-gray-400'}\r\n          `}\r\n          onClick={() => onDotClick(index)}\r\n        ></span>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nDotIndicators.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  activeIndex: PropTypes.number.isRequired,\r\n  onDotClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default DotIndicators;",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\Homepage\\nftHomePage\\components\\MainNftCard.jsx",
        "messages": [
            {
                "ruleId": "no-unused-vars",
                "severity": 2,
                "message": "'React' is defined but never used.",
                "line": 1,
                "column": 8,
                "nodeType": "Identifier",
                "messageId": "unusedVar",
                "endLine": 1,
                "endColumn": 13,
                "suggestions": [
                    {
                        "messageId": "removeVar",
                        "data": {
                            "varName": "React"
                        },
                        "fix": {
                            "range": [
                                7,
                                18
                            ],
                            "text": ""
                        },
                        "desc": "Remove unused variable 'React'."
                    }
                ]
            }
        ],
        "suppressedMessages": [],
        "errorCount": 1,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DotIndicators from './DotIndicators'; // Import DotIndicators\r\n\r\nconst MainNftCard = ({ nft, onClick, onPrev, onNext, totalNfts, currentNftIndex, onDotClick }) => {\r\n  return (\r\n    <div\r\n      className=\"relative w-full h-80 md:h-96 bg-gray-700 rounded-2xl shadow-lg overflow-hidden group animate-fade-in\"\r\n    >\r\n      {/* Clickable overlay for NFT detail - This covers the whole card for general click */}\r\n      <div\r\n        className=\"absolute inset-0 z-10 cursor-pointer\"\r\n        onClick={() => onClick(nft)}\r\n      ></div>\r\n      <img\r\n        src={nft.image}\r\n        alt={nft.name}\r\n        className=\"absolute inset-0 w-full h-full object-cover opacity-70 group-hover:opacity-100 transition-opacity duration-500\"\r\n        onError={(e) => { e.target.onerror = null; e.target.src = 'https://placehold.co/1200x600/CCCCCC/000000?text=NFT+Image+Error'; }}\r\n      />\r\n      <div className=\"absolute inset-0 bg-gradient-to-t from-gray-900 to-transparent p-6 flex flex-col justify-end text-white z-20\">\r\n        {/* Title is explicitly clickable */}\r\n        <h3\r\n          onClick={(e) => { e.stopPropagation(); onClick(nft); }} // Stop propagation and open detail\r\n          className=\"text-2xl md:text-3xl font-bold mb-2 leading-tight cursor-pointer hover:underline\"\r\n        >\r\n          {nft.name}\r\n        </h3>\r\n        <p className=\"text-base md:text-lg mb-4 opacity-90\">\r\n          {nft.description}\r\n        </p>\r\n        <div className=\"flex items-center text-sm opacity-80\">\r\n          <span>Floor: {nft.floorPrice}</span>\r\n          <span className=\"mx-2\">•</span>\r\n          <span>Collection: {nft.collection}</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Navigation buttons - Always visible */}\r\n      <button\r\n        onClick={(e) => { e.stopPropagation(); onPrev(); }}\r\n        className=\"absolute left-4 top-1/2 transform -translate-y-1/2 bg-gray-800 bg-opacity-70 text-white p-2 rounded-full shadow-lg transition-colors duration-300 z-30 hover:bg-gray-700\"\r\n        aria-label=\"Previous NFT\"\r\n      >\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"md:h-6 md:w-6 h-6 w-6 cursor-pointer\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\r\n        </svg>\r\n      </button>\r\n      <button\r\n        onClick={(e) => { e.stopPropagation(); onNext(); }}\r\n        className=\"absolute right-4 top-1/2 transform -translate-y-1/2 bg-gray-800 bg-opacity-70 text-white p-2 rounded-full shadow-lg transition-colors duration-300 z-30 hover:bg-gray-700\"\r\n        aria-label=\"Next NFT\"\r\n      >\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"md:h-6 md:w-6 h-6 w-6 cursor-pointer\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n        </svg>\r\n      </button>\r\n\r\n      {/* Dot Indicators */}\r\n      <DotIndicators count={totalNfts} activeIndex={currentNftIndex} onDotClick={onDotClick} />\r\n    </div>\r\n  );\r\n};\r\n\r\nMainNftCard.propTypes = {\r\n  nft: PropTypes.object.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  onPrev: PropTypes.func.isRequired,\r\n  onNext: PropTypes.func.isRequired,\r\n  totalNfts: PropTypes.number.isRequired,\r\n  currentNftIndex: PropTypes.number.isRequired,\r\n  onDotClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default MainNftCard;",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\Homepage\\nftHomePage\\components\\NFTPriceComparator.jsx",
        "messages": [
            {
                "ruleId": "no-unused-vars",
                "severity": 2,
                "message": "'React' is defined but never used.",
                "line": 1,
                "column": 8,
                "nodeType": "Identifier",
                "messageId": "unusedVar",
                "endLine": 1,
                "endColumn": 13,
                "suggestions": [
                    {
                        "messageId": "removeVar",
                        "data": {
                            "varName": "React"
                        },
                        "fix": {
                            "range": [
                                7,
                                13
                            ],
                            "text": ""
                        },
                        "desc": "Remove unused variable 'React'."
                    }
                ]
            },
            {
                "ruleId": "no-unused-vars",
                "severity": 2,
                "message": "'masterData' is assigned a value but never used.",
                "line": 75,
                "column": 9,
                "nodeType": "Identifier",
                "messageId": "unusedVar",
                "endLine": 75,
                "endColumn": 19,
                "suggestions": [
                    {
                        "messageId": "removeVar",
                        "data": {
                            "varName": "masterData"
                        },
                        "fix": {
                            "range": [
                                2939,
                                2959
                            ],
                            "text": ""
                        },
                        "desc": "Remove unused variable 'masterData'."
                    }
                ]
            }
        ],
        "suppressedMessages": [],
        "errorCount": 2,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import React, { useState, useEffect, useMemo } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport { ChevronDown, Minus, Plus } from 'lucide-react';\r\nimport PropTypes from 'prop-types';\r\nimport ConfirmationModal from './ConfirmationModal';\r\nimport ChildNftCard from './ChildNftCard'; // For related NFTs\r\nimport ButtonCard from '../../../ButtonCard';\r\n\r\nimport nftData from '../data/nftData.json';\r\nimport priceHistoryData from '../data/priceHistory.json';\r\n\r\nconst exchanges = priceHistoryData.exchanges;\r\nconst nftItems = priceHistoryData.nftItems;\r\n\r\n// Helper to extract numeric price from string like \"5.20 ETH\"\r\nconst parsePrice = (priceString) => {\r\n  const match = priceString ? priceString.match(/(\\d+\\.?\\d*)/) : null;\r\n  return match ? parseFloat(match[1]) : 0;\r\n};\r\n\r\n// Generates detailed price history for each NFT on each exchange\r\nconst generatePriceHistory = () => {\r\n  const history = {};\r\n  const now = new Date();\r\n  nftItems.forEach(nftName => {\r\n    history[nftName] = {};\r\n    exchanges.forEach(exchange => {\r\n      history[nftName][exchange.id] = [];\r\n      let price = Math.random() * 10 + 2; // Starting price\r\n      // Ensure the starting price is somewhat relevant to actual NFT data\r\n      const correspondingNft = nftData.find(nft => nft.name === nftName);\r\n      if (correspondingNft) {\r\n        price = parsePrice(correspondingNft.floorPrice) || price;\r\n      }\r\n\r\n      for (let i = 90; i >= 0; i--) {\r\n        const date = new Date(now);\r\n        date.setDate(now.getDate() - i);\r\n        price += (Math.random() - 0.5) * (price * 0.1); // Fluctuate price by up to 10%\r\n        price = Math.max(0.1, price); // Ensure price doesn't go below 0.1\r\n        history[nftName][exchange.id].push({\r\n          date: date.toISOString().split('T')[0],\r\n          price: parseFloat(price.toFixed(2)),\r\n        });\r\n      }\r\n    });\r\n  });\r\n  return history;\r\n};\r\n\r\nconst priceData = generatePriceHistory();\r\n\r\n\r\nconst NFTPriceComparator = ({ onNftClick, onCollectionClick, initialSelectedNftName }) => {\r\n  const [selectedNft, setSelectedNft] = useState(initialSelectedNftName || nftItems[0]);\r\n  const [timeRange, setTimeRange] = useState(30); // 30 days\r\n  const [activeExchanges, setActiveExchanges] = useState(() => {\r\n    const initialState = {};\r\n    exchanges.forEach(ex => initialState[ex.id] = true);\r\n    return initialState;\r\n  });\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalContent, setModalContent] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (initialSelectedNftName && initialSelectedNftName !== selectedNft) {\r\n      setSelectedNft(initialSelectedNftName);\r\n    }\r\n  }, [initialSelectedNftName, selectedNft]); // Added selectedNft to dependency array\r\n\r\n  const filteredData = useMemo(() => {\r\n    if (!selectedNft) return [];\r\n\r\n    const nftPriceHistory = priceData[selectedNft];\r\n    let masterData = [];\r\n\r\n    const now = new Date();\r\n    const pastDate = new Date();\r\n    if (timeRange !== 'all') {\r\n      pastDate.setDate(now.getDate() - timeRange);\r\n    }\r\n\r\n    const dateSet = new Set();\r\n    Object.values(nftPriceHistory).forEach(history => {\r\n      history.forEach(record => {\r\n        const recordDate = new Date(record.date);\r\n        if (timeRange === 'all' || recordDate >= pastDate) {\r\n          dateSet.add(record.date);\r\n        }\r\n      });\r\n    });\r\n\r\n    const sortedDates = Array.from(dateSet).sort((a, b) => new Date(a) - new Date(b));\r\n\r\n    return sortedDates.map(date => {\r\n      const entry = { date };\r\n      exchanges.forEach(exchange => {\r\n        if (activeExchanges[exchange.id]) {\r\n          const priceRecord = nftPriceHistory[exchange.id].find(r => r.date === date);\r\n          entry[exchange.id] = priceRecord ? priceRecord.price : null;\r\n        }\r\n      });\r\n      return entry;\r\n    });\r\n  }, [selectedNft, timeRange, activeExchanges]);\r\n\r\n  const summaryStats = useMemo(() => {\r\n    const allPrices = [];\r\n    filteredData.forEach(day => {\r\n      Object.keys(day).forEach(key => {\r\n        if (key !== 'date' && day[key] !== null) {\r\n          allPrices.push(day[key]);\r\n        }\r\n      });\r\n    });\r\n    if (allPrices.length === 0) return { avg: 'N/A', high: 'N/A', low: 'N/A' };\r\n\r\n    const sum = allPrices.reduce((a, b) => a + b, 0);\r\n    return {\r\n      avg: (sum / allPrices.length).toFixed(2),\r\n      high: Math.max(...allPrices).toFixed(2),\r\n      low: Math.min(...allPrices).toFixed(2),\r\n    };\r\n  }, [filteredData]);\r\n\r\n  const toggleExchange = (exchangeId) => {\r\n    setActiveExchanges(prev => ({ ...prev, [exchangeId]: !prev[exchangeId] }));\r\n  };\r\n\r\n  const handleBuySellClick = (actionType, exchangeId) => {\r\n    const exchange = exchanges.find(ex => ex.id === exchangeId);\r\n    if (!exchange) return;\r\n\r\n    // Find the actual NFT object from nftData to get its floor price\r\n    const currentNftObject = nftData.find(nft => nft.name === selectedNft);\r\n    const nftBasePrice = currentNftObject ? parsePrice(currentNftObject.floorPrice) : 0;\r\n    const estimatedFee = (nftBasePrice * exchange.fee).toFixed(2);\r\n\r\n    setModalContent({\r\n      title: `${actionType} NFT on ${exchange.name}`,\r\n      message: `You are about to ${actionType.toLowerCase()} \"${selectedNft}\" on ${exchange.name}. Estimated transaction fee: ${estimatedFee} ETH (${(exchange.fee * 100).toFixed(2)}%). Do you want to proceed?`,\r\n      onConfirm: () => {\r\n        console.log(`${actionType} action confirmed for ${selectedNft} on ${exchange.name}. Fee: ${estimatedFee} ETH`);\r\n        setIsModalOpen(false);\r\n        // In a real application, you would integrate with a wallet here\r\n        // Example: initiateBlockchainTransaction(selectedNft, actionType, exchangeId, nftBasePrice);\r\n      }\r\n    });\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Filter related NFTs (excluding main type and the current selected one for comparison)\r\n  const relatedNfts = useMemo(() => {\r\n    return nftData.filter(nft =>\r\n      nft.type === 'child' && nft.name !== selectedNft && nftItems.includes(nft.name)\r\n    ).slice(0, 3); // Get up to 3 related NFTs\r\n  }, [selectedNft]);\r\n\r\n\r\n  // Prepare data for the transaction fees table, sorted by fee\r\n  const transactionFeeExchanges = useMemo(() => {\r\n    return [...exchanges].sort((a, b) => a.fee - b.fee).map(exchange => {\r\n      const currentNftObject = nftData.find(nft => nft.name === selectedNft);\r\n      const nftBasePrice = currentNftObject ? parsePrice(currentNftObject.floorPrice) : 0;\r\n      const estimatedFee = (nftBasePrice * exchange.fee).toFixed(2);\r\n      return { ...exchange, estimatedFee };\r\n    });\r\n  }, [selectedNft]);\r\n\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-900 via-gray-900 to-purple-900 text-white font-sans p-4 sm:p-6 lg:p-8\">\r\n      {/* <style global>{`\r\n        @keyframes fadeIn { from { opacity: 0; transform: translateY(10px); } to { opacity: 1; transform: translateY(0); } }\r\n        @keyframes scaleIn { from { transform: scale(0.95); opacity: 0; } to { transform: scale(1); opacity: 1; } }\r\n        @keyframes fadeInUp { from { opacity: 0; transform: translateY(20px); } to { opacity: 1; transform: translateY(0); } }\r\n\r\n        .animate-fade-in { animation: fadeIn 0.5s ease-out forwards; }\r\n        .animate-scale-in { animation: scaleIn 0.3s ease-out forwards; }\r\n        .animate-fade-in-up { animation: fadeInUp 0.6s ease-out forwards; }\r\n      `}</style> */}\r\n\r\n      <div className=\"max-w-7xl mx-auto animate-fade-in\">\r\n        <header className=\"mb-8\">\r\n          <h1 className=\"text-4xl md:text-5xl font-bold text-white text-start\">NFT Price Comparison</h1>\r\n          <p className=\"text-gray-400 mt-2 text-start\">Compare price history for specific NFTs across major exchanges.</p>\r\n        </header>\r\n\r\n        {/* --- Filter Controls --- */}\r\n        <div className=\"bg-purple-500 p-4 rounded-xl mb-8 flex flex-col md:flex-row justify-between items-center gap-4\">\r\n          <div className=\"w-full md:w-auto relative flex-grow\">\r\n            <select\r\n              value={selectedNft}\r\n              onChange={(e) => setSelectedNft(e.target.value)}\r\n              className=\"w-full bg-purple-900 cursor-pointer text-white border border-gray-600 rounded-lg px-4 py-2 pr-10 focus:outline-none focus:ring-2 focus:ring-purple-600 appearance-none\"\r\n            >\r\n              {nftItems.map(name => <option key={name} value={name}>{name}</option>)}\r\n            </select>\r\n            <ChevronDown className=\"absolute right-3 top-1/2 -translate-y-1/2 w-5 h-5 pointer-events-none\" />\r\n          </div>\r\n          <div className=\"flex gap-2 bg-purple-900 p-1 rounded-lg\">\r\n            {[{ label: '24H', value: 1 }, { label: '7D', value: 7 }, { label: '30D', value: 30 }, { label: 'All Time', value: 'all' }].map(range => (\r\n              <button\r\n                key={range.value}\r\n                onClick={() => setTimeRange(range.value)}\r\n                className={`px-3 py-1 rounded-md cursor-pointer text-sm font-semibold transition-colors ${timeRange === range.value ? 'bg-purple-600 text-white' : 'text-gray-300 hover:bg-purple-600'}`}\r\n              >\r\n                {range.label}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* --- Main Chart and Info --- */}\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-8\">\r\n          <div className=\"lg:col-span-3 bg-purple-900 p-6 rounded-xl animate-fade-in-up\">\r\n            <h2 className=\"text-xl font-bold mb-4\">Price History (ETH)</h2>\r\n            <ResponsiveContainer width=\"100%\" height={400}>\r\n              <LineChart data={filteredData} margin={{ top: 5, right: 20, left: -10, bottom: 5 }}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#ffffff\" />\r\n                <XAxis dataKey=\"date\" stroke=\"#888\" fontSize={12} tick={{ fill: '#ffffff' }} />\r\n                <YAxis stroke=\"#888\" fontSize={12} tick={{ fill: '#ffffff' }} />\r\n                <Tooltip contentStyle={{ backgroundColor: 'purple', border: '1px', borderRadius: '0.5rem' }} />\r\n                <Legend />\r\n                {exchanges.map(exchange => (\r\n                  activeExchanges[exchange.id] && <Line key={exchange.id} type=\"monotone\" dataKey={exchange.id} name={exchange.name} stroke={exchange.color} strokeWidth={2} dot={false} />\r\n                ))}\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n\r\n          <div className=\"lg:col-span-1 bg-purple-900 p-6 rounded-xl flex flex-col animate-fade-in-up\">\r\n            <h2 className=\"text-xl font-bold mb-4\">Marketplaces</h2>\r\n            <div className=\"space-y-3 flex-grow\">\r\n              {exchanges.map(exchange => (\r\n                <label key={exchange.id} className=\"flex items-center space-x-3 cursor-pointer\">\r\n                  <input type=\"checkbox\" checked={activeExchanges[exchange.id]} onChange={() => toggleExchange(exchange.id)} className=\"h-5 w-5 rounded bg-gray-700 border-gray-600 text-blue-500 focus:ring-blue-600\" />\r\n                  <span className=\"w-4 h-4 rounded-full\" style={{ backgroundColor: exchange.color }}></span>\r\n                  <span className=\"text-white\">{exchange.name} ({`${(exchange.fee * 100).toFixed(1)}% fee`})</span>\r\n                </label>\r\n              ))}\r\n            </div>\r\n            <div className=\"mt-6 border-t border-gray-700 pt-4\">\r\n              <h3 className=\"text-lg font-bold mb-3\">Summary ({timeRange === 'all' ? 'All Time' : `${timeRange}D`})</h3>\r\n              <div className=\"space-y-2 text-sm\">\r\n                <div className=\"flex justify-between\"><span className=\"text-gray-400\">Avg. Price:</span> <span className=\"font-bold text-white\">{summaryStats.avg} ETH</span></div>\r\n                <div className=\"flex justify-between\"><span className=\"text-gray-400\">Highest Price:</span> <span className=\"font-bold text-green-400\">{summaryStats.high} ETH</span></div>\r\n                <div className=\"flex justify-between\"><span className=\"text-gray-400\">Lowest Price:</span> <span className=\"font-bold text-red-400\">{summaryStats.low} ETH</span></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* --- Transaction Fees Table (New Section) --- */}\r\n        <section className=\"mt-12  p-6 rounded-xl animate-fade-in-up\">\r\n          <h2 className=\"text-3xl font-bold text-white mb-6\">Transaction Fees for {selectedNft}</h2>\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full divide-y divide-gray-700\">\r\n              <thead className=\"bg-purple-900\">\r\n                <tr>\r\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                    Exchange\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                    Base Fee\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                    Estimated Fee ({nftData.find(nft => nft.name === selectedNft)?.floorPrice || 'N/A'})\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-4 py-3 text-center text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                    Actions\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"  divide-y divide-gray-700\">\r\n                {transactionFeeExchanges.map(exchange => (\r\n                  <tr key={exchange.id} className=\" transition-colors duration-200\">\r\n                    <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-white\">\r\n                      <div className=\"flex items-center\">\r\n                        <span className=\"w-3 h-3 rounded-full mr-2\" style={{ backgroundColor: exchange.color }}></span>\r\n                        {exchange.name}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-200\">\r\n                      {(exchange.fee * 100).toFixed(1)}%\r\n                    </td>\r\n                    <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-200\">\r\n                      {exchange.estimatedFee} ETH\r\n                    </td>\r\n                    <td className=\"px-4 py-4 whitespace-nowrap text-center text-sm\">\r\n                      <div className=\"flex justify-center  space-x-2\">\r\n                        \r\n\r\n\r\n                        <ButtonCard\r\n                        onClick={()=>handleBuySellClick('Buy',exchange.id)}\r\n                        background='bg-purple-900'\r\n                        icon={Plus}\r\n\r\n                        size='small'\r\n                        animationType='glow'\r\n                        >\r\n                        Buy\r\n\r\n                        </ButtonCard>\r\n                        <ButtonCard\r\n                        onClick={()=>handleBuySellClick('Sell',exchange.id)}\r\n                        background='bg-purple-900'\r\n                        icon={Minus}\r\n                        size='small'\r\n                        animationType='glow'\r\n                        >\r\n                        Sell\r\n\r\n                        </ButtonCard>\r\n\r\n                        \r\n\r\n\r\n\r\n\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </section>\r\n\r\n\r\n        {/* Related NFTs Section */}\r\n        {relatedNfts.length > 0 && (\r\n          <section className=\"mt-12 animate-fade-in-up\">\r\n            <h2 className=\"text-3xl font-bold text-white mb-6\">Related NFTs</h2>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n              {relatedNfts.map(nft => (\r\n                <ChildNftCard\r\n                  key={nft.id}\r\n                  nft={nft}\r\n                  onClick={onNftClick}\r\n                  onCollectionClick={onCollectionClick}\r\n                />\r\n              ))}\r\n            </div>\r\n          </section>\r\n        )}\r\n      </div>\r\n      <ConfirmationModal\r\n        isOpen={isModalOpen}\r\n        onClose={() => setIsModalOpen(false)}\r\n        title={modalContent.title || ''}\r\n        message={modalContent.message || ''}\r\n        onConfirm={modalContent.onConfirm || (() => { })}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nNFTPriceComparator.propTypes = {\r\n  onNftClick: PropTypes.func.isRequired,\r\n  onCollectionClick: PropTypes.func.isRequired,\r\n  initialSelectedNftName: PropTypes.string,\r\n};\r\n\r\n\r\nexport default NFTPriceComparator;",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\Homepage\\nftHomePage\\components\\NftDetailPage.jsx",
        "messages": [
            {
                "ruleId": "no-unused-vars",
                "severity": 2,
                "message": "'React' is defined but never used.",
                "line": 1,
                "column": 8,
                "nodeType": "Identifier",
                "messageId": "unusedVar",
                "endLine": 1,
                "endColumn": 13,
                "suggestions": [
                    {
                        "messageId": "removeVar",
                        "data": {
                            "varName": "React"
                        },
                        "fix": {
                            "range": [
                                7,
                                13
                            ],
                            "text": ""
                        },
                        "desc": "Remove unused variable 'React'."
                    }
                ]
            }
        ],
        "suppressedMessages": [],
        "errorCount": 1,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport NFTPriceComparator from './NFTPriceComparator'; // Import the new component\r\nimport { X } from 'lucide-react'; // For close icon\r\n\r\n\r\nconst NftDetailPage = ({ nft, onClose, onNftClick, onCollectionClick }) => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  useEffect(() => {\r\n    setIsVisible(true);\r\n    return () => setIsVisible(false);\r\n  }, [nft]);\r\n\r\n  if (!nft) return null;\r\n\r\n  return (\r\n    <div className={`fixed inset-0 bg-gradient-to-br from-blue-900 via-gray-900 to-purple-900 bg-opacity-90 flex items-center justify-center p-4 z-50 transition-opacity duration-500 ${isVisible ? 'opacity-100' : 'opacity-0'}`}>\r\n      <div className={`bg-purple-900 rounded-xl shadow-2xl max-w-7xl w-full max-h-[90vh] overflow-y-auto transform transition-all duration-500 ${isVisible ? 'scale-100' : 'scale-95'}`}>\r\n        <div className=\"relative w-full\">\r\n          <img src={nft.image} className='w-full object-cover bg-center h-56' />\r\n          <button onClick={onClose} className=\"absolute top-4 right-4 cursor-pointer bg-gray-800 text-white rounded-full p-2 shadow-lg hover:bg-gray-700 transition-colors duration-300\" aria-label=\"Close\">\r\n            <X size={24} />\r\n          </button>\r\n        </div>\r\n        <div className=\"p-6 md:p-8 \">\r\n          <h1 className=\"text-3xl md:text-4xl font-extrabold text-gray-200 mb-4 leading-tight\">{nft.name} {nft.nftId}</h1>\r\n          <div className=\"flex flex-wrap items-center text-sm text-gray-400 mb-6 space-x-4\">\r\n            {nft.collection && <span>Collection: <span className=\"font-semibold\">{nft.collection}</span></span>}\r\n            {nft.floorPrice && <span>Floor Price: <span className=\"font-semibold\">{nft.floorPrice} ({nft.usdPrice})</span></span>}\r\n            {nft.ownerCount && <span>Owners: <span className=\"font-semibold\">{nft.ownerCount}</span></span>}\r\n          </div>\r\n          <p className=\"text-base md:text-lg text-gray-300 leading-relaxed whitespace-pre-wrap\">{nft.fullContent || nft.description || 'No full content available for this NFT.'}</p>\r\n        </div>\r\n        <NFTPriceComparator\r\n          onNftClick={onNftClick}\r\n          onCollectionClick={onCollectionClick}\r\n          initialSelectedNftName={nft.name} // Pass the name of the currently viewed NFT\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nNftDetailPage.propTypes = {\r\n  nft: PropTypes.object,\r\n  onClose: PropTypes.func.isRequired,\r\n  onNftClick: PropTypes.func.isRequired,\r\n  onCollectionClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default NftDetailPage;\r\n",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\Homepage\\nftHomePage\\components\\TrendsNftTable.jsx",
        "messages": [
            {
                "ruleId": "no-unused-vars",
                "severity": 2,
                "message": "'React' is defined but never used.",
                "line": 1,
                "column": 8,
                "nodeType": "Identifier",
                "messageId": "unusedVar",
                "endLine": 1,
                "endColumn": 13,
                "suggestions": [
                    {
                        "messageId": "removeVar",
                        "data": {
                            "varName": "React"
                        },
                        "fix": {
                            "range": [
                                7,
                                18
                            ],
                            "text": ""
                        },
                        "desc": "Remove unused variable 'React'."
                    }
                ]
            }
        ],
        "suppressedMessages": [],
        "errorCount": 1,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TrendsNftTable = ({ trends, onClick }) => {\r\n  return (\r\n    <div className=\"border border-gray-500 rounded-xl shadow-lg p-6 animate-fade-in\">\r\n      <h2 className=\"text-2xl md:text-3xl font-bold text-teal-400 mb-6\">\r\n        Trends NFT\r\n      </h2>\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"min-w-full divide-y divide-gray-700\">\r\n          <thead className=\"bg-purple-800\">\r\n            <tr>\r\n              <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                COLLECTION\r\n              </th>\r\n              <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                FLOOR PRICE\r\n              </th>\r\n              {/* <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                TO CHANGE\r\n              </th> */}\r\n              {/* <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                TOP OFFER\r\n              </th> */}\r\n              <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                1D VOL\r\n              </th>\r\n              {/* <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                OWNERS\r\n              </th> */}\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\" divide-y divide-gray-700\">\r\n            {trends.map((nft) => (\r\n              <tr key={nft.id} className=\"hover:bg-purple-900 transition-colors duration-200 cursor-pointer\" onClick={() => onClick(nft)}>\r\n                <td className=\"px-4 py-4 whitespace-nowrap text-xs font-medium text-white\">\r\n                  <div className=\"flex items-center\">\r\n                    <span className=\"text-yellow-400 mr-2\">★</span> {nft.collection}\r\n                  </div>\r\n                </td>\r\n                <td className=\"px-4 py-4 whitespace-nowrap text-xs text-gray-200\">\r\n                  {nft.floorPrice}\r\n                </td>\r\n                {/* <td className={`px-4 py-4 whitespace-nowrap text-sm ${nft.toChange.startsWith('+') ? 'text-green-400' : 'text-red-400'}`}>\r\n                  {nft.toChange}\r\n                </td> */}\r\n                {/* <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-200\">\r\n                  {nft.topOffer}\r\n                </td> */}\r\n                <td className=\"px-4 py-4 whitespace-nowrap text-xs text-gray-200\">\r\n                  {nft.vol}\r\n                </td>\r\n                {/* <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-200\">\r\n                  {nft.ownerCount}\r\n                </td> */}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTrendsNftTable.propTypes = {\r\n  trends: PropTypes.array.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TrendsNftTable;",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\LoadingBlurOverlay.jsx",
        "messages": [
            {
                "ruleId": "no-unused-vars",
                "severity": 2,
                "message": "'React' is defined but never used.",
                "line": 1,
                "column": 8,
                "nodeType": "Identifier",
                "messageId": "unusedVar",
                "endLine": 1,
                "endColumn": 13,
                "suggestions": [
                    {
                        "messageId": "removeVar",
                        "data": {
                            "varName": "React"
                        },
                        "fix": {
                            "range": [
                                7,
                                18
                            ],
                            "text": ""
                        },
                        "desc": "Remove unused variable 'React'."
                    }
                ]
            }
        ],
        "suppressedMessages": [],
        "errorCount": 1,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import React from 'react';\r\n\r\nconst LoadingBlurOverlay = () => {\r\n  return (\r\n    <div\r\n      className=\"fixed inset-0 z-50 flex items-center justify-center bg-gray-900 bg-opacity-70 backdrop-blur-sm\"\r\n      aria-live=\"polite\"\r\n      aria-busy=\"true\"\r\n    >\r\n      <div className=\"flex flex-col items-center text-white p-6 rounded-lg shadow-xl\">\r\n        {/* Simple Spinner */}\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-4 border-b-4 border-yellow-500 mb-4\"></div>\r\n        <p className=\"text-lg font-semibold text-gray-200\">Loading content...</p>\r\n        <p className=\"text-sm text-gray-400 mt-2\">Please wait a moment.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingBlurOverlay;\r\n",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\MainNavbar.jsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\NotFoundPage.jsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\ProjectDiscovery.jsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\QuillEditor.jsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\ScrollToTop.jsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\SubscribeToNewsletter.jsx",
        "messages": [
            {
                "ruleId": "no-unused-vars",
                "severity": 2,
                "message": "'React' is defined but never used.",
                "line": 1,
                "column": 8,
                "nodeType": "Identifier",
                "messageId": "unusedVar",
                "endLine": 1,
                "endColumn": 13,
                "suggestions": [
                    {
                        "messageId": "removeVar",
                        "data": {
                            "varName": "React"
                        },
                        "fix": {
                            "range": [
                                7,
                                13
                            ],
                            "text": ""
                        },
                        "desc": "Remove unused variable 'React'."
                    }
                ]
            }
        ],
        "suppressedMessages": [],
        "errorCount": 1,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import React, { useState } from 'react';\r\n\r\nconst SubscribeToNewsletter = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!email) {\r\n      setMessage('Please enter a valid email address.');\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    // Simulate API call\r\n    setTimeout(() => {\r\n      setIsLoading(false);\r\n      setMessage('Thank you for subscribing!');\r\n      setEmail('');\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"lg:flex lg:flex-row items-center flex-col justify-between max-w-7xl mx-auto\">\r\n        <div className=\"text-center\">\r\n          <h2 className=\"text-2xl sm:text-3xl font-extrabold text-white mb-4\">\r\n            Subscribe to Our Newsletter\r\n          </h2>\r\n          <p className=\"text-sm sm:text-base text-gray-300 mb-6 max-w-md mx-auto\">\r\n            Stay updated with the latest news, insights, and exclusive content delivered straight to your inbox.\r\n          </p>\r\n        </div>\r\n        <div className=\"flex justify-center\">\r\n          <div className=\"bg-white rounded-lg shadow-lg p-4 sm:p-6 w-full max-w-md\">\r\n            <form onSubmit={handleSubmit} className=\"flex flex-col sm:flex-row gap-2\">\r\n              <input\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => {\r\n                  setEmail(e.target.value);\r\n                  setMessage('');\r\n                }}\r\n                placeholder=\"Enter your email\"\r\n                className=\"flex-1 px-4 py-2 rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 text-gray-900 text-sm sm:text-base\"\r\n                disabled={isLoading}\r\n              />\r\n              <button\r\n                type=\"submit\"\r\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors duration-300 text-sm sm:text-base font-medium flex items-center justify-center\"\r\n                disabled={isLoading}\r\n              >\r\n                {isLoading ? (\r\n                  <svg className=\"animate-spin h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                  </svg>\r\n                ) : (\r\n                  'Subscribe'\r\n                )}\r\n              </button>\r\n            </form>\r\n            {message && (\r\n              <p className={`mt-3 text-sm text-center ${message.includes('Thank you') ? 'text-green-600' : 'text-red-600'}`}>\r\n                {message}\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubscribeToNewsletter;",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\TestComponent.jsx",
        "messages": [
            {
                "ruleId": "no-unused-vars",
                "severity": 2,
                "message": "'React' is defined but never used.",
                "line": 1,
                "column": 8,
                "nodeType": "Identifier",
                "messageId": "unusedVar",
                "endLine": 1,
                "endColumn": 13,
                "suggestions": [
                    {
                        "messageId": "removeVar",
                        "data": {
                            "varName": "React"
                        },
                        "fix": {
                            "range": [
                                7,
                                13
                            ],
                            "text": ""
                        },
                        "desc": "Remove unused variable 'React'."
                    }
                ]
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'title' is missing in props validation",
                "line": 8,
                "column": 22,
                "nodeType": "Property",
                "messageId": "missingPropType",
                "endLine": 8,
                "endColumn": 27
            },
            {
                "ruleId": "react/prop-types",
                "severity": 2,
                "message": "'children' is missing in props validation",
                "line": 8,
                "column": 29,
                "nodeType": "Property",
                "messageId": "missingPropType",
                "endLine": 8,
                "endColumn": 37
            }
        ],
        "suppressedMessages": [],
        "errorCount": 3,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import React, { useState } from 'react';\r\n// Assuming Recharts components are available globally via window.Recharts\r\n// or are handled by the environment's module resolution.\r\n// For a standalone immersive, you might need to load Recharts via a <script> tag.\r\n// Example: <script src=\"https://cdnjs.cloudflare.com/ajax/libs/recharts/2.12.0/recharts.min.js\"></script>\r\n\r\n// Accordion Component for collapsible sections\r\nconst Accordion = ({ title, children }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    return (\r\n        <div className=\"border border-gray-200 rounded-lg mb-4 shadow-sm bg-white overflow-hidden\">\r\n            <button\r\n                className=\"flex justify-between items-center w-full p-4 text-left font-semibold text-lg text-gray-800 focus:outline-none focus:ring-2 focus:ring-indigo-500 rounded-t-lg\"\r\n                onClick={() => setIsOpen(!isOpen)}\r\n                aria-expanded={isOpen}\r\n            >\r\n                {title}\r\n                {/* Simple SVG for arrow icon, avoiding external icon library for self-containment */}\r\n                <svg\r\n                    className={`w-5 h-5 transition-transform duration-300 ${isOpen ? 'rotate-180' : ''}`}\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\"></path>\r\n                </svg>\r\n            </button>\r\n            <div\r\n                className={`transition-all duration-500 ease-in-out ${\r\n                    isOpen ? 'max-h-screen opacity-100 p-4 pt-0' : 'max-h-0 opacity-0'\r\n                }`}\r\n            >\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Mock data for Recharts visualizations\r\nconst mockPriceData = [\r\n    { name: 'Jan', price: 1500 },\r\n    { name: 'Feb', price: 1650 },\r\n    { name: 'Mar', price: 1700 },\r\n    { name: 'Apr', price: 1850 },\r\n    { name: 'May', price: 2000 },\r\n    { name: 'Jun', price: 2100 },\r\n    { name: 'Jul', price: 2250 },\r\n    { name: 'Aug', price: 2150 },\r\n    { name: 'Sep', price: 2300 },\r\n    { name: 'Oct', price: 2500 },\r\n    { name: 'Nov', price: 2700 },\r\n    { name: 'Dec', price: 2900 },\r\n];\r\n\r\nconst mockTxVolumeData = [\r\n    { name: 'Jan', volume: 100000 },\r\n    { name: 'Feb', volume: 120000 },\r\n    { name: 'Mar', volume: 110000 },\r\n    { name: 'Apr', volume: 130000 },\r\n    { name: 'May', volume: 150000 },\r\n    { name: 'Jun', volume: 140000 },\r\n    { name: 'Jul', volume: 160000 },\r\n    { name: 'Aug', volume: 155000 },\r\n    { name: 'Sep', volume: 170000 },\r\n    { name: 'Oct', volume: 180000 },\r\n    { name: 'Nov', volume: 190000 },\r\n    { name: 'Dec', volume: 200000 },\r\n];\r\n\r\n// Main ChainSpecificData Component\r\nconst ChainSpecificData = () => {\r\n    // Dynamically get Recharts components from window object if available\r\n    const { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } = window.Recharts || {};\r\n\r\n    return (\r\n        // Apply Inter font and responsive padding\r\n        <div className=\"min-h-screen bg-gradient-to-br from-purple-50 to-indigo-100 p-4 sm:p-6 lg:p-8 font-inter text-gray-800\">\r\n            {/* Custom CSS for animations and font */}\r\n            <style>\r\n                {`\r\n                @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap');\r\n\r\n                .font-inter {\r\n                    font-family: 'Inter', sans-serif;\r\n                }\r\n\r\n                @keyframes fadeInDown {\r\n                    from { opacity: 0; transform: translateY(-20px); }\r\n                    to { opacity: 1; transform: translateY(0); }\r\n                }\r\n                @keyframes fadeInUp {\r\n                    from { opacity: 0; transform: translateY(20px); }\r\n                    to { opacity: 1; transform: translateY(0); }\r\n                }\r\n                @keyframes scaleIn {\r\n                    from { opacity: 0; transform: scale(0.95); }\r\n                    to { opacity: 1; transform: scale(1); }\r\n                }\r\n\r\n                .animate-fade-in-down { animation: fadeInDown 0.8s ease-out forwards; }\r\n                .animate-fade-in-up { animation: fadeInUp 0.8s ease-out forwards; }\r\n                .animate-scale-in { animation: scaleIn 0.5s ease-out forwards; }\r\n                `}\r\n            </style>\r\n\r\n            {/* Header Section */}\r\n            <header className=\"text-center mb-12\">\r\n                <h1 className=\"text-5xl sm:text-6xl font-extrabold text-indigo-800 drop-shadow-lg animate-fade-in-down\">\r\n                    Ethereum: The World Computer\r\n                </h1>\r\n                <p className=\"mt-4 text-xl sm:text-2xl text-indigo-600 font-medium animate-fade-in-up\">\r\n                    A decentralized, open-source blockchain with smart contract functionality.\r\n                </p>\r\n            </header>\r\n\r\n            {/* Key Highlights Section - Uses Grid for layout */}\r\n            <section className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-12\">\r\n                {/* Highlight Card 1 */}\r\n                <div className=\"bg-white p-6 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1 animate-scale-in\">\r\n                    <h2 className=\"text-2xl font-bold text-indigo-700 mb-3\">Key Highlights</h2>\r\n                    <ul className=\"list-disc list-inside text-gray-700 space-y-2\">\r\n                        <li>**Market Cap Rank:** #2 (as of early 2024, fluctuates)</li>\r\n                        <li>**Transactions per Second:** ~15-30 TPS (on Layer 1, scales with Layer 2s)</li>\r\n                        <li>**Consensus Mechanism:** Proof-of-Stake (since The Merge)</li>\r\n                    </ul>\r\n                </div>\r\n\r\n                {/* Highlight Card 2 */}\r\n                <div className=\"bg-white p-6 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1 animate-scale-in\">\r\n                    <h2 className=\"text-2xl font-bold text-indigo-700 mb-3\">What Can Ethereum Do?</h2>\r\n                    <ul className=\"list-disc list-inside text-gray-700 space-y-2\">\r\n                        <li>**Decentralized Finance (DeFi):** Lending, borrowing, DEXs.</li>\r\n                        <li>**Non-Fungible Tokens (NFTs):** Digital art, collectibles, gaming assets.</li>\r\n                        <li>**Gaming:** Play-to-earn games, metaverse experiences.</li>\r\n                        <li>**Decentralized Autonomous Organizations (DAOs):** Community governance.</li>\r\n                        <li>**Supply Chain Management:** Tracking goods and transparency.</li>\r\n                    </ul>\r\n                </div>\r\n\r\n                {/* Highlight Card 3 */}\r\n                <div className=\"bg-white p-6 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1 animate-scale-in\">\r\n                    <h2 className=\"text-2xl font-bold text-indigo-700 mb-3\">Understanding Gas Fees</h2>\r\n                    <p className=\"text-gray-700 mb-2\">\r\n                        Gas on Ethereum measures computational effort and is paid in Ether (ETH).\r\n                    </p>\r\n                    <ul className=\"list-disc list-inside text-gray-700 space-y-2\">\r\n                        <li>**Purpose:** Incentivizes validators, prevents network spam.</li>\r\n                        <li>**Calculation:** Varies by transaction complexity.</li>\r\n                        <li>**Unit:** Gwei (1 Gwei = 0.000000001 ETH).</li>\r\n                    </ul>\r\n                </div>\r\n            </section>\r\n\r\n            {/* Accordion Sections - Centralized for readability */}\r\n            <section className=\"max-w-4xl mx-auto mb-12\">\r\n                <Accordion title=\"The Story of Ethereum: History & Milestones\">\r\n                    <p className=\"text-gray-700 mb-3\">\r\n                        Ethereum was conceptualized by Vitalik Buterin in 2013 and officially launched in 2015. It aimed to create a more generalized blockchain platform beyond just cryptocurrency.\r\n                    </p>\r\n                    <ul className=\"list-disc list-inside text-gray-700 space-y-2\">\r\n                        <li>**2013:** Whitepaper published by Vitalik Buterin.</li>\r\n                        <li>**2014:** Crowdsale raises funds for development.</li>\r\n                        <li>**July 30, 2015:** Frontier, the first live release of Ethereum, goes live.</li>\r\n                        <li>**2016:** The DAO hack and subsequent hard fork (Ethereum Classic divergence).</li>\r\n                        <li>**2017:** ICO boom drives significant network activity.</li>\r\n                        <li>**December 2020:** Beacon Chain launches, marking the start of Ethereum&aposs transition to Proof-of-Stake.</li>\r\n                        <li>**September 15, 2022:** The Merge (Proof-of-Work to Proof-of-Stake transition).</li>\r\n                        <li>**April 12, 2023:** Shanghai/Capella (Shapella) upgrade enables ETH withdrawals from staking.</li>\r\n                    </ul>\r\n                </Accordion>\r\n\r\n                <Accordion title=\"Smart Contracts & Development\">\r\n                    <p className=\"text-gray-700 mb-3\">\r\n                        Ethereum&apos;s core innovation is its ability to execute smart contracts, self-executing agreements written in code.\r\n                    </p>\r\n                    <ul className=\"list-disc list-inside text-gray-700 space-y-2\">\r\n                        <li>**Language:** Primarily Solidity, but also Vyper and Yul.</li>\r\n                        <li>**Virtual Machine:** Ethereum Virtual Machine (EVM) executes smart contract bytecode.</li>\r\n                        <li>**Developer Friendly:** Robust developer tools, extensive documentation, and a large community.</li>\r\n                    </ul>\r\n                </Accordion>\r\n\r\n                <Accordion title=\"Supported Standards\">\r\n                    <p className=\"text-gray-700 mb-3\">\r\n                        Ethereum&apos;s ecosystem benefits from widely adopted token and interoperability standards.\r\n                    </p>\r\n                    <ul className=\"list-disc list-inside text-gray-700 space-y-2\">\r\n                        <li>**Token Standards:** ERC-20 (fungible), ERC-721 (NFTs), ERC-1155 (multi-token).</li>\r\n                        <li>**Layer 2 Solutions:** Rollups (Optimistic and ZK-Rollups) for scalability.</li>\r\n                        <li>**Interoperability:** Bridges to other chains.</li>\r\n                    </ul>\r\n                </Accordion>\r\n\r\n                <Accordion title=\"Network Type & Industries\">\r\n                    <p className=\"text-gray-700 mb-3\">\r\n                        Ethereum is a **public, permissionless blockchain**, meaning anyone can participate and build on it without needing permission.\r\n                    </p>\r\n                    <ul className=\"list-disc list-inside text-gray-700 space-y-2\">\r\n                        <li>**Financial Services:** Decentralized exchanges, lending platforms, insurance.</li>\r\n                        <li>**Gaming & Entertainment:** Play-to-earn models, digital ownership, metaverse.</li>\r\n                        <li>**Art & Collectibles:** NFTs for digital and physical asset representation.</li>\r\n                        <li>**Identity & Governance:** Self-sovereign identity, DAOs for community governance.</li>\r\n                    </ul>\r\n                </Accordion>\r\n\r\n                <Accordion title=\"Ecosystem Standing & Recognition\">\r\n                    <p className=\"text-gray-700 mb-3\">\r\n                        Ethereum consistently ranks as a top blockchain ecosystem due to its pioneering role, robust developer community, and the sheer volume of dApps built on it.\r\n                    </p>\r\n                    <ul className=\"list-disc list-inside text-gray-700 space-y-2\">\r\n                        <li>**Market Capitalization:** Consistently ranks among the top cryptocurrencies by market cap.</li>\r\n                        <li>**Total Value Locked (TVL):** Holds a significant portion of the total value locked in DeFi.</li>\r\n                        <li>**Developer Activity:** One of the most active developer communities in the blockchain space.</li>\r\n                    </ul>\r\n                </Accordion>\r\n            </section>\r\n\r\n            {/* Visualizations Section - Only renders if Recharts is available */}\r\n            {LineChart && (\r\n                <section className=\"max-w-4xl mx-auto mb-12 bg-white p-6 rounded-xl shadow-lg\">\r\n                    <h2 className=\"text-3xl font-bold text-indigo-700 mb-6 text-center\">Data Visualizations</h2>\r\n                    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n                        {/* Mock ETH Price History Chart */}\r\n                        <div>\r\n                            <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Mock ETH Price History (USD)</h3>\r\n                            <ResponsiveContainer width=\"100%\" height={300}>\r\n                                <LineChart data={mockPriceData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                                    <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e0e0e0\" />\r\n                                    <XAxis dataKey=\"name\" stroke=\"#666\" />\r\n                                    <YAxis stroke=\"#666\" />\r\n                                    <Tooltip\r\n                                        contentStyle={{ backgroundColor: '#fff', border: '1px solid #ccc', borderRadius: '8px', padding: '10px' }}\r\n                                        labelStyle={{ color: '#333' }}\r\n                                        itemStyle={{ color: '#666' }}\r\n                                    />\r\n                                    <Line type=\"monotone\" dataKey=\"price\" stroke=\"#8884d8\" strokeWidth={2} dot={{ r: 4 }} activeDot={{ r: 8 }} />\r\n                                </LineChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                        {/* Mock Transaction Volume Chart */}\r\n                        <div>\r\n                            <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Mock Transaction Volume (Daily)</h3>\r\n                            <ResponsiveContainer width=\"100%\" height={300}>\r\n                                <LineChart data={mockTxVolumeData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                                    <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e0e0e0\" />\r\n                                    <XAxis dataKey=\"name\" stroke=\"#666\" />\r\n                                    <YAxis stroke=\"#666\" />\r\n                                    <Tooltip\r\n                                        contentStyle={{ backgroundColor: '#fff', border: '1px solid #ccc', borderRadius: '8px', padding: '10px' }}\r\n                                        labelStyle={{ color: '#333' }}\r\n                                        itemStyle={{ color: '#666' }}\r\n                                    />\r\n                                    <Line type=\"monotone\" dataKey=\"volume\" stroke=\"#82ca9d\" strokeWidth={2} dot={{ r: 4 }} activeDot={{ r: 8 }} />\r\n                                </LineChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            )}\r\n\r\n            {/* Resources & Community Links Section - Uses Grid for layout */}\r\n            <section className=\"max-w-4xl mx-auto bg-white p-6 rounded-xl shadow-lg\">\r\n                <h2 className=\"text-3xl font-bold text-indigo-700 mb-6 text-center\">Resources & Community</h2>\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                    {/* Link Card 1 */}\r\n                    <div className=\"bg-gray-50 p-4 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-300\">\r\n                        <h3 className=\"text-xl font-semibold text-gray-800 mb-2\">Official Resources</h3>\r\n                        <ul className=\"space-y-2 text-gray-700\">\r\n                            <li><a href=\"https://ethereum.org/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-indigo-600 hover:underline\">Official Website</a></li>\r\n                            <li><a href=\"https://ethereum.org/developers/docs/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-indigo-600 hover:underline\">Developer Docs</a></li>\r\n                            <li><a href=\"https://ethereum.org/whitepaper/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-indigo-600 hover:underline\">Whitepaper</a></li>\r\n                        </ul>\r\n                    </div>\r\n                    {/* Link Card 2 */}\r\n                    <div className=\"bg-gray-50 p-4 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-300\">\r\n                        <h3 className=\"text-xl font-semibold text-gray-800 mb-2\">Connect with Ethereum</h3>\r\n                        <ul className=\"space-y-2 text-gray-700\">\r\n                            <li><a href=\"https://twitter.com/ethereum\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-indigo-600 hover:underline\">Twitter/X</a></li>\r\n                            <li><a href=\"https://www.reddit.com/r/ethereum/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-indigo-600 hover:underline\">Reddit</a></li>\r\n                            <li><a href=\"https://www.youtube.com/c/EthereumFoundation\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-indigo-600 hover:underline\">YouTube</a></li>\r\n                        </ul>\r\n                    </div>\r\n                    {/* Link Card 3 */}\r\n                    <div className=\"bg-gray-50 p-4 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-300\">\r\n                        <h3 className=\"text-xl font-semibold text-gray-800 mb-2\">Code & Development</h3>\r\n                        <ul className=\"space-y-2 text-gray-700\">\r\n                            <li><a href=\"https://github.com/ethereum\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-indigo-600 hover:underline\">GitHub Org</a></li>\r\n                            <li><a href=\"https://github.com/ethereum/go-ethereum\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-indigo-600 hover:underline\">Go Ethereum (Geth)</a></li>\r\n                        </ul>\r\n                    </div>\r\n                    {/* Link Card 4 */}\r\n                    <div className=\"bg-gray-50 p-4 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-300\">\r\n                        <h3 className=\"text-xl font-semibold text-gray-800 mb-2\">Community & Support</h3>\r\n                        <ul className=\"space-y-2 text-gray-700\">\r\n                            <li><a href=\"https://forum.ethereum.org/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-indigo-600 hover:underline\">Community Forum</a></li>\r\n                            <li><a href=\"https://ethereum.stackexchange.com/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-indigo-600 hover:underline\">StackExchange</a></li>\r\n                            <li><a href=\"https://ethereum.foundation/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-indigo-600 hover:underline\">Ethereum Foundation</a></li>\r\n                        </ul>\r\n                    </div>\r\n                    {/* Link Card 5 */}\r\n                    <div className=\"bg-gray-50 p-4 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-300\">\r\n                        <h3 className=\"text-xl font-semibold text-gray-800 mb-2\">Block Explorers & Analytics</h3>\r\n                        <ul className=\"space-y-2 text-gray-700\">\r\n                            <li><a href=\"https://etherscan.io/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-indigo-600 hover:underline\">Etherscan</a></li>\r\n                            <li><a href=\"https://ethplorer.io/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-indigo-600 hover:underline\">Ethplorer</a></li>\r\n                            <li><a href=\"https://dune.com/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-indigo-600 hover:underline\">Dune Analytics</a></li>\r\n                        </ul>\r\n                    </div>\r\n                    {/* Link Card 6 */}\r\n                    <div className=\"bg-gray-50 p-4 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-300\">\r\n                        <h3 className=\"text-xl font-semibold text-gray-800 mb-2\">Key Differentiators</h3>\r\n                        <ul className=\"list-disc list-inside space-y-2 text-gray-700\">\r\n                            <li>Pioneering Smart Contracts</li>\r\n                            <li>Largest Ecosystem</li>\r\n                            <li>Robust Security & Decentralization</li>\r\n                            <li>Active Layer 2 Scaling</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            {/* Roadmap Section - As a final accordion */}\r\n            <section className=\"max-w-4xl mx-auto mt-12\">\r\n                <Accordion title=\"Roadmap (Future Plans)\">\r\n                    <p className=\"text-gray-700 mb-3\">\r\n                        Ethereum continues to evolve with a focus on scalability, security, and sustainability. Key areas of ongoing development include:\r\n                    </p>\r\n                    <ul className=\"list-disc list-inside text-gray-700 space-y-2\">\r\n                        <li>**Sharding:** Dividing the network into smaller shards to process transactions in parallel, significantly increasing throughput.</li>\r\n                        <li>**Verkle Trees:** Optimizing state growth and enabling stateless clients.</li>\r\n                        <li>**Proto-Danksharding (EIP-4844):** A precursor to full sharding, introducing blobs to reduce transaction costs for rollups.</li>\r\n                    </ul>\r\n                </Accordion>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Export the main component\r\nexport default ChainSpecificData;\r\n",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\TrendingTopics.jsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\Web3BlockchainSection.jsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\projectDiscovery\\CategoryList.jsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\projectDiscovery\\ProjectDiscovery.jsx",
        "messages": [
            {
                "ruleId": "no-unused-vars",
                "severity": 2,
                "message": "'query' is defined but never used.",
                "line": 31,
                "column": 25,
                "nodeType": "Identifier",
                "messageId": "unusedVar",
                "endLine": 31,
                "endColumn": 30,
                "suggestions": [
                    {
                        "messageId": "removeVar",
                        "data": {
                            "varName": "query"
                        },
                        "fix": {
                            "range": [
                                1118,
                                1123
                            ],
                            "text": ""
                        },
                        "desc": "Remove unused variable 'query'."
                    }
                ]
            }
        ],
        "suppressedMessages": [],
        "errorCount": 1,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import { useState } from 'react';\r\nimport CategoryList from './CategoryList';\r\nimport SearchBar from './SearchBar';\r\nimport SearchResults from './SearchResults';\r\n\r\n\r\n// Mock data\r\nconst mockSearchResults = {\r\n  trendsNews: ['News 1: Ethereum ETF Approved', 'News 2: Solana Upgrade'],\r\n  trendsProjects: ['Project A', 'Project B'],\r\n  trendsBlogs: ['Blog 1: DeFi Trends', 'Blog 2: NFT Boom'],\r\n  upcomingTokens: ['Token X: Q1 2026', 'Token Y: Q2 2026'],\r\n  releasedTokens: ['Token Z: Released Q4 2025'],\r\n  fundingDetails: ['Project A: $10M Series A', 'Project B: $5M Seed'],\r\n  projectHealth: {\r\n    score: 85,\r\n    metrics: ['Community: Strong', 'Development: Active', 'Liquidity: High']\r\n  },\r\n  relatedProjects: ['Project C', 'Project D', 'Project E']\r\n};\r\n\r\nconst ProjectDiscovery = () => {\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n  const [searchResults, setSearchResults] = useState(null);\r\n\r\n  const handleCategorySelect = (category) => {\r\n    setSelectedCategory(category);\r\n    setSearchResults(null); // Reset search results when category changes\r\n  };\r\n\r\n  const handleSearch = (query) => {\r\n    // Simulate search results based on query\r\n    setSearchResults(mockSearchResults);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900\">\r\n      <header className=\"bg-blue-800 p-4 text-white text-center\">\r\n        <h1 className=\"text-3xl font-bold\">Project Discovery Dashboard</h1>\r\n      </header>\r\n      <CategoryList onCategorySelect={handleCategorySelect} />\r\n      <SearchBar onSearch={handleSearch} />\r\n      {selectedCategory && (\r\n        <div className=\"p-6 text-white\">\r\n          <h2 className=\"text-xl font-semibold\">Selected Category: {selectedCategory}</h2>\r\n        </div>\r\n      )}\r\n      {searchResults && <SearchResults results={searchResults} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectDiscovery;",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\projectDiscovery\\ProjectHealthCard.jsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\projectDiscovery\\SearchBar.jsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "C:\\Users\\HP\\OneDrive\\Desktop\\FinalYearProjectsDetails\\Web3Project\\client\\src\\components\\projectDiscovery\\SearchResults.jsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    }
]